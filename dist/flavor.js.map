{"version":3,"sources":["webpack://flavor-js/webpack/universalModuleDefinition","webpack://flavor-js/webpack/bootstrap","webpack://flavor-js/./node_modules/lodash/_SetCache.js","webpack://flavor-js/./node_modules/lodash/_Stack.js","webpack://flavor-js/./node_modules/lodash/_arrayMap.js","webpack://flavor-js/./node_modules/lodash/_arraySome.js","webpack://flavor-js/./node_modules/lodash/_assocIndexOf.js","webpack://flavor-js/./node_modules/lodash/_baseGet.js","webpack://flavor-js/./node_modules/lodash/_baseIndexOf.js","webpack://flavor-js/./node_modules/lodash/_baseIndexOfWith.js","webpack://flavor-js/./node_modules/lodash/_baseIsEqual.js","webpack://flavor-js/./node_modules/lodash/_baseIsEqualDeep.js","webpack://flavor-js/./node_modules/lodash/_baseIsMatch.js","webpack://flavor-js/./node_modules/lodash/_baseIteratee.js","webpack://flavor-js/./node_modules/lodash/_baseMatches.js","webpack://flavor-js/./node_modules/lodash/_baseMatchesProperty.js","webpack://flavor-js/./node_modules/lodash/_basePullAll.js","webpack://flavor-js/./node_modules/lodash/_baseUnary.js","webpack://flavor-js/./node_modules/lodash/_cacheHas.js","webpack://flavor-js/./node_modules/lodash/_copyArray.js","webpack://flavor-js/./node_modules/lodash/_equalArrays.js","webpack://flavor-js/./node_modules/lodash/_equalByTag.js","webpack://flavor-js/./node_modules/lodash/_equalObjects.js","webpack://flavor-js/./node_modules/lodash/_getAllKeys.js","webpack://flavor-js/./node_modules/lodash/_getMatchData.js","webpack://flavor-js/./node_modules/lodash/_getTag.js","webpack://flavor-js/./node_modules/lodash/_isKey.js","webpack://flavor-js/./node_modules/lodash/_isStrictComparable.js","webpack://flavor-js/./node_modules/lodash/_listCacheClear.js","webpack://flavor-js/./node_modules/lodash/_listCacheDelete.js","webpack://flavor-js/./node_modules/lodash/_listCacheGet.js","webpack://flavor-js/./node_modules/lodash/_listCacheHas.js","webpack://flavor-js/./node_modules/lodash/_listCacheSet.js","webpack://flavor-js/./node_modules/lodash/_matchesStrictComparable.js","webpack://flavor-js/./node_modules/lodash/_overArg.js","webpack://flavor-js/./node_modules/lodash/_toKey.js","webpack://flavor-js/./node_modules/lodash/eq.js","webpack://flavor-js/./node_modules/lodash/get.js","webpack://flavor-js/./node_modules/lodash/hasIn.js","webpack://flavor-js/./node_modules/lodash/identity.js","webpack://flavor-js/./node_modules/lodash/isArray.js","webpack://flavor-js/./node_modules/lodash/isBuffer.js","webpack://flavor-js/./node_modules/lodash/isObject.js","webpack://flavor-js/./node_modules/lodash/isObjectLike.js","webpack://flavor-js/./node_modules/lodash/isTypedArray.js","webpack://flavor-js/./node_modules/lodash/keys.js","webpack://flavor-js/./node_modules/lodash/property.js","webpack://flavor-js/./node_modules/lodash/toFinite.js","webpack://flavor-js/./node_modules/lodash/toNumber.js","webpack://flavor-js/./src/extensions/array.js","webpack://flavor-js/./src/extensions/boolean.js","webpack://flavor-js/./src/extensions/core.js","webpack://flavor-js/./src/extensions/date.js","webpack://flavor-js/./src/extensions/function.js","webpack://flavor-js/./src/extensions/lodash.js","webpack://flavor-js/./src/extensions/number.js","webpack://flavor-js/./src/extensions/object.js","webpack://flavor-js/./src/extensions/string.js","webpack://flavor-js/./src/flavor.js","webpack://flavor-js/./src/index.js","webpack://flavor-js/external {\"commonjs\":\"lodash\",\"commonjs2\":\"lodash\",\"amd\":\"lodash\",\"root\":\"_\"}"],"names":["native","isArray","a","Array","prototype","call","contains","item","all","concat","ac","distinct","diff","b","fn","diffBy","propName","sortBy","propNames","propDirections","deepSortBy","childrenPropName","filterBy","propValue","pull","pullBy","findBy","reverse","deepFindBy","indexBy","containsBy","countBy","falseValues","intersection","arrays","union","removeBy","random","weightField","valueField","each","iteratee","first","last","sum","startValue","deepMap","lorem","items","model","flatten","deep","shuffle","split","n","clone","tail","cut","maxBy","difference","length","includes","arr","uniqWith","isEqual","predicate","String","isString","aitem","bitem","Function","isFunction","differenceWith","map","orderBy","deepOrderBy","propValues","filter","filterByValues","values","comparator","pullAllByComparator","pullAllBy","Object","isObject","findLast","find","findLastIndex","findIndex","undefined","unionWith","times","omit","sample","eachRight","acc","reduce","Number","i","isNumber","flattenDepth","Boolean","isBoolean","flattenDeep","chunk","initial","Math","delay","ms","isDate","d","Date","startDate","endDate","getTime","toTimestamp","round","f","proxy","scope","args","proxyArgs","func","apply","isPercentage","s","parsePercentage","collection","key","o","path","mapCallback","found","timesReverse","index","timesRange","start","end","objectToPaths","obj","leavesOnly","parentKey","result","idx","flatMap","isPlainObject","keys","subkey","value","get","keyValueToHash","keyValueCollection","keyField","transform","keyValueItem","objectToHash","hashToObject","hash","set","cleanObject","omitBy","mergeInc","mergeWith","accValue","newValue","sumProp","isBetween","from","MIN_VALUE","to","MAX_VALUE","parse","parseInt","isInteger","lower","upper","floating","fromRoman","str","decimal","roman","indexOf","replace","toRoman","toFileSize","precision","toAbsolute","toSymbolString","sections","sectionsDelimiter","decimals","decimalsDelimiter","symbol","symbolAppend","symbolNumberSeparator","toCurrency","floor","crop","min","max","range","step","degreeWrap","degreeDiff","a1","a2","degreeDir","num","fileSizeString","sizes","log","parseFloat","pow","toFixed","abs","prepend","append","re","RegExp","rangeStart","rangeEnd","method","ang1","ang2","inherit","pick","def","createNew","newArgs","slice","safeInherit","unshift","merge","cloneDeep","isRoman","isUrl","insensitive","startsWith","endsWith","guid","toString","camelCase","capitalize","decodeURI","encodeURI","escapeHTML","extractDomain","level","excludeWww","extractFileExtension","extractQueryString","pad","chars","padLeft","padRight","replaceAll","haystack","needle","replacement","slugify","dashed","stripTags","unescapeHTML","toInt","toArray","separator","limit","test","escapeRegExp","encodeURIComponent","decodeURIComponent","escape","unescape","domain","domainArr","join","queryStringObject","queryString","pop","queryStringParams","param","slug","kebabCase","substring","lastIndexOf","toLowerCase","div","document","createElement","innerHTML","textContent","padStart","padEnd","FlavorJS","init","proto","prop","val","options","defineProperty","writable","configurable","enumerable","extend","forOwn","extendPrototypeProperty","mixin","extendPrototype","extendLodash","extendObject","extendFunction","extendBoolean","extendNumber","extendDate","extendString","extendArray","flavorJSStatus","version","initialized","console","flavorJSInitialized","window","Window","Æ’","flavorJS"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;ACnEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA,gBAAgB,SAAS;AACzB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACtBA;;AAEA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACtBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,WAAW,QAAQ;AACnB;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AClFA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC9BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACbA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACnBA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,MAAM;AACjB,WAAW,MAAM;AACjB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,iBAAiB;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpCA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACxFA;;AAEA;AACA;;AAEA;;;;;;;;;;;;ACLA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,MAAM;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACvBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,EAAE;AACf;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpBA;;AAEA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACZA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AClCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,EAAE;AACf;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;AClBA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACfA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,EAAE;AACb,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,EAAE;AACf;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,iBAAiB;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,WAAW,EAAE;AACb,aAAa,EAAE;AACf;AACA;AACA,iBAAiB,QAAQ,OAAO,SAAS,EAAE;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,aAAa;AACxB,aAAa,QAAQ;AACrB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,EAAE;AACf;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACjBA;;AAEA;AACA;;AAEA;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;ACbA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;A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","file":"flavor.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"lodash\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"flavor-js\", [\"lodash\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"flavor-js\"] = factory(require(\"lodash\"));\n\telse\n\t\troot[\"flavor-js\"] = factory(root[\"_\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE_lodash__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","var isArray = require('./isArray');\n\n/**\n * Casts `value` as an array if it's not one.\n *\n * @static\n * @memberOf _\n * @since 4.4.0\n * @category Lang\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast array.\n * @example\n *\n * _.castArray(1);\n * // => [1]\n *\n * _.castArray({ 'a': 1 });\n * // => [{ 'a': 1 }]\n *\n * _.castArray('abc');\n * // => ['abc']\n *\n * _.castArray(null);\n * // => [null]\n *\n * _.castArray(undefined);\n * // => [undefined]\n *\n * _.castArray();\n * // => []\n *\n * var array = [1, 2, 3];\n * console.log(_.castArray(array) === array);\n * // => true\n */\nfunction castArray() {\n  if (!arguments.length) {\n    return [];\n  }\n  var value = arguments[0];\n  return isArray(value) ? value : [value];\n}\n\nmodule.exports = castArray;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","/**\n * This function is like `baseIndexOf` except that it accepts a comparator.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOfWith(array, value, fromIndex, comparator) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (comparator(array[index], value)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseIndexOfWith;\n","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n","var arrayMap = require('./_arrayMap'),\n    baseIndexOf = require('./_baseIndexOf'),\n    baseIndexOfWith = require('./_baseIndexOfWith'),\n    baseUnary = require('./_baseUnary'),\n    copyArray = require('./_copyArray');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAllBy` without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAll(array, values, iteratee, comparator) {\n  var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n      index = -1,\n      length = values.length,\n      seen = array;\n\n  if (array === values) {\n    values = copyArray(values);\n  }\n  if (iteratee) {\n    seen = arrayMap(array, baseUnary(iteratee));\n  }\n  while (++index < length) {\n    var fromIndex = 0,\n        value = values[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n      if (seen !== array) {\n        splice.call(seen, fromIndex, 1);\n      }\n      splice.call(array, fromIndex, 1);\n    }\n  }\n  return array;\n}\n\nmodule.exports = basePullAll;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","import _ from 'lodash';\n\n/**\n * @namespace array\n * @description the JS native Array class\n */\nexport default {\n  native: {\n    /**\n     * checks if something is an array\n     * @example <caption>eg. usage</caption>\n     * var a = new Array();\n     *\n     * console.log(Array.isArray(a)); // true<br>\n     * console.log(Array.isArray(2)); // false<br>\n     * console.log(Array.isArray([])); // true<br>\n     * console.log(Array.isArray(null)); // false\n     * @memberOf array\n     * @method isArray\n     * @instance\n     * @param {array} a - the array to be checked \n     * @return {boolean}\n     */\n    isArray(a) {\n      return Array.prototype.isArray.call(a);\n    },\n\n    /**\n     * checks if an Array contains something\n     * @example <caption>eg. usage</caption>\n     * var arr = ['a', 'e', 'i', 'o', 'u'];\n     *\n     * console.log(Array.contains(arr, 'b')); // false\n     * console.log(Array.contains(arr, 'a')); // true\n     * console.log(Array.contains(arr, ['a', 'b', 'e']); // true\n     * console.log(Array.contains(arr, ['a', 'b', 'e'], true); // false\n     *\n     * console.log(arr.contains('b')); // false\n     * console.log(arr.contains('a')); // true\n     * console.log(arr.contains(['a', 'b', 'e']); // true\n     * console.log(arr.contains(['a', 'b', 'e'], true); // false\n     * @memberOf array\n     * @method contains\n     * @instance\n     * @param {array} a - the array to be checked\n     * @param {array|*} item - can be anything or an array of anything\n     * @param {boolean} [all=false] - specify to check if the array must contain all items\n     * @return {boolean}\n     */\n    contains(a, item, all = false) {\n      if (Array.isArray(a)) {\n        return Array.prototype.contains.call(a, item, all);\n      }\n\n      return a;\n    },\n\n    /**\n     * concatenates two arrays\n     * @example <caption>eg. usage</caption>\n     * var arr = ['a', 'e', 'i', 'o', 'u'];\n     *\n     * console.log(Array.concat(arr, ['b', 'c', 'd']); // ['a', 'e', 'i', 'o', 'u', 'b', 'c', 'd']\n     * console.log(arr.concat(['b', 'c', 'd']); // ['a', 'e', 'i', 'o', 'u', 'b', 'c', 'd']\n     * @memberOf array\n     * @method concat\n     * @instance\n     * @param {array|*} a - the array to be concatenated\n     * @param {array|*} ac - the array to concatenate or the item to concatenate\n     * @return {array}\n     */\n    concat(a, ac) {\n      if (Array.isArray(a)) {\n        return Array.prototype.concat.call(a, ac);\n      }\n\n      return a;\n    },\n\n    /**\n     * distincts an array<br><br>\n     * @example <caption>eg. usage</caption>\n     * var arr = ['a', 'a', 'e', 'i', 'o', 'u'];\n     *\n     * console.log(Array.distinct(arr); // ['a', 'e', 'i', 'o', 'u']\n     * console.log(arr.distinct(]); // ['a', 'e', 'i', 'o', 'u']\n     * @memberOf array\n     * @method distinct\n     * @instance\n     * @param {array} a - the array to be distincted\n     * @return {array}\n     */\n    distinct(a) {\n      if (Array.isArray(a)) {\n        return Array.prototype.distinct.call(a);\n      }\n\n      return a;\n    },\n\n    /**\n     * creates an array of unique array values not included in the other provided arrays\n     * @example <caption>eg. usage</caption>\n     * var arr = ['a', 'e', 'i', 'o', 'u'];\n     * var arr2 = ['a', 'b', 'c', 'd', 'e'];\n     *\n     * console.log(Array.diff(arr, arr2)); // ['i', 'o', 'u']\n     * console.log(arr.diff(arr2)); // same as above\n     *\n     * console.log(Array.diff(arr2, arr)); // ['b', 'c', 'd']\n     * console.log(arr2.diff(arr)); // same as above\n     * \n     * var collection = [{id: 1, type: 'a'}, {id: 2, type: 'e'}, {id: 3, type: 'i'}, {id: 4, type: 'o'}, {id: 5, type: 'u'}];\n     * var collection2 = [{id: 1, type: 'a'}, {id: 2, type: 'b'}, {id: 3, type: 'c'}, {id: 4, type: 'd'}, {id: 5, type: 'e'}];\n     * \n     * console.log(Array.diff(collection, collection2)); // [{id: 2, type: 'e'}, {id: 3, type: 'i'}, {id: 4, type: 'o'}, {id: 5, type: 'u'}]\n     * console.log(collection.diff(collection2)); // same as above\n     * \n     * console.log(Array.diff(collection, collection2, 'type'); // [{id: 3, type: 'i'}, {id: 4, type: 'o'}, {id: 5, type: 'u'}]\n     * console.log(collection.diff(collection2, 'type'); // same as above\n     * \n     * console.log(Array.diff(collection, collection2, function(aitem, bitem) {\n     *   return aitem.type === bitem.type;\n     * })); // same as above\n     * \n     * console.log(collection.diff(collection2, function(aitem, bitem) {\n     *   return aitem.type === bitem.type;\n     * })); // same as above\n     * @memberOf array\n     * @method diff\n     * @instance\n     * @param {array} a - the first array to use for the diff\n     * @param {array} b - the second array to use for the diff\n     * @param {function|string} [fn=null] - function to use as comparator for the diff or the propname to check for the equality or nothing for standard equality<br>\n     * the function will be invoked with an item from the first array and an item from the second array,<br>\n     * so the function has to look like this<br>\n     * <pre>\n     * function(aitem, bitem) {}\n     * </pre>\n     * @param {object|any} fn.aitem - the item from the first array\n     * @param {object|any} fn.bitem - the item from the second array\n     * @return {array} \n     */\n    diff(a, b, fn = null) {\n      if (Array.isArray(a) && Array.isArray(b)) {\n        return Array.prototype.diff.call(a, b, fn);\n      }\n\n      return [];\n    },\n\n    /**\n     * creates an array of unique array values not included in the other provided arrays based on a field equality (aliases Array.diff)\n     * @example <caption>eg. usage</caption>\n     * @memberOf array\n     * @method diffBy\n     * @instance\n     * @param {array} a - the first array to use for the diff\n     * @param {array} b - the second array to use for the diff\n     * @param {string} propName - the property name to be used in comparator for the diff\n     * @return {array|null} \n     */\n    diffBy(a, b, propName) {\n      if (Array.isArray(a) && Array.isArray(b)) {\n        return Array.diff(a, b, propName);\n      }\n\n      return null;\n    },\n\n    /**\n     * sorts an array\n     * @example <caption>eg. usage</caption>\n     * var collection = [\n     *   {id: 1, type: 'a'}, \n     *   {id: 3, type: 'i'}, \n     *   {id: 5, type: 'u'}, \n     *   {id: 4, type: 'o'}, \n     *   {id: 2, type: 'e'}\n     * ];\n     * \n     * console.log(Array.sortBy(collection, 'type')); // [{id: 1, type: 'a'}, {id: 2, type: 'e'}, {id: 3, type: 'i'}, {id: 4, type: 'o'}, {id: 5, type: 'u'}] \n     * console.log(collection.sortBy('type')); // same as above\n     * \n     * console.log(Array.sortBy(collection, 'id', 'desc')); // [{id: 5, type: 'u'}, {id: 4, type: 'o'}, {id: 3, type: 'i'}, {id: 2, type: 'e'}, {id: 1, type: 'a'}] \n     * console.log(collection.softBy('id', 'desc')); // same as above\n     * \n     * var collection = [\n     *   {type: 'a', value: 'a'}, \n     *   {type: 'a', value: 'a-2-1'}, \n     *   {type: 'a', value: 'a-1-3'}, \n     *   {type: 'c', value: 'c'}, \n     *   {type: 'a', value: 'a-1-1'}, \n     *   {type: 'b', value: 'b'},\n     * ];\n     * \n     * console.log(Array.sortBy(collection, ['type', 'value'])); \n     * // [\n     * //   {type: 'a', value: 'a'}, \n     * //   {type: 'a', value: 'a-1-1'}, \n     * //   {type: 'a', value: 'a-1-3'}, \n     * //   {type: 'a', value: 'a-2-1'}, \n     * //   {type: 'b', value: 'b'},\n     * //   {type: 'c', value: 'c'}, \n     * // ];\n     * \n     * console.log(collection.sortBy(['type', 'value'])); // same as above\n     * \n     * console.log(Array.sortBy(collection, ['type', 'value'], ['asc', 'desc'])); \n     * // [\n     * //   {type: 'a', value: 'a'}, \n     * //   {type: 'a', value: 'a-2-1'}, \n     * //   {type: 'a', value: 'a-1-3'}, \n     * //   {type: 'a', value: 'a-1-1'}, \n     * //   {type: 'b', value: 'b'},\n     * //   {type: 'c', value: 'c'}, \n     * // ];\n     * \n     * console.log(collection.sortBy(['type', 'value'], ['asc', 'desc'])); // same as above\n     * @memberOf array\n     * @method sortBy\n     * @instance\n     * @param {array} a - the array to be sorted \n     * @param {array|string} propNames - the propName(s) you want to use for sorting\n     * @param {array|string|null} [propDirections=null] - the propDirection(s) you want to use for sorting (respect propName(s) order)\n     * @return {array}\n     */\n    sortBy(a, propNames, propDirections = null) {\n      if (Array.isArray(a)) {\n        return Array.prototype.sortBy.call(a, propNames, propDirections);\n      }\n\n      return a;\n    },\n\n    /**\n     * deeply sorts an array\n     * @example <caption>eg. usage</caption>\n     * var collection = [\n     *   {type: 'b', value: 'b', items: [\n     *     {type: 'b', value: 'b-1'},\n     *     {type: 'b', value: 'b-5'},\n     *     {type: 'b', value: 'b-2'},\n     *     {type: 'b', value: 'b-4'},\n     *     {type: 'b', value: 'b-3'},\n     *   ]}, \n     *   {type: 'd', value: 'd'}, \n     *   {type: 'a', value: 'a', items: [\n     *     {type: 'a', value: 'a-1', items: [\n     *       {type: 'a', value: 'a-1-1'},\n     *       {type: 'a', value: 'a-1-3'},\n     *       {type: 'a', value: 'a-1-2'},\n     *     ]}},\n     *     {type: 'a', value: 'a-5', items: [\n     *       {type: 'a', value: 'a-5-1'},\n     *     ]}},\n     *     {type: 'a', value: 'a-2', items: [\n     *       {type: 'a', value: 'a-2-1'},\n     *       {type: 'a', value: 'a-2-3'},\n     *       {type: 'a', value: 'a-2-2'},\n     *       {type: 'a', value: 'a-2-4'},\n     *     ]}},\n     *     {type: 'a', value: 'a-4', items: [\n     *       {type: 'a', value: 'a-4-1'},\n     *     ]}},\n     *     {type: 'a', value: 'a-3', items: [\n     *       {type: 'a', value: 'a-3-2'},\n     *       {type: 'a', value: 'a-3-1'},\n     *     ]}},\n     *   ]}, \n     *   {type: 'c', value: 'c', items: []}, \n     * ];\n     * \n     * console.log(Array.deepSortBy(collection, ['type', 'value'], ['asc', 'desc'], 'items')); \n     * // [\n     * //   {type: 'a', value: 'a', items: [\n     * //     {type: 'a', value: 'a-5', items: [\n     * //       {type: 'a', value: 'a-5-1'},\n     * //     ]}},\n     * //     {type: 'a', value: 'a-4', items: [\n     * //       {type: 'a', value: 'a-4-1'},\n     * //     ]}},\n     * //     {type: 'a', value: 'a-3', items: [\n     * //       {type: 'a', value: 'a-3-2'},\n     * //       {type: 'a', value: 'a-3-1'},\n     * //     ]}},\n     * //     {type: 'a', value: 'a-2', items: [\n     * //       {type: 'a', value: 'a-2-4'},\n     * //       {type: 'a', value: 'a-2-3'},\n     * //       {type: 'a', value: 'a-2-2'},\n     * //       {type: 'a', value: 'a-2-1'},\n     * //     ]}},\n     * //     {type: 'a', value: 'a-1', items: [\n     * //       {type: 'a', value: 'a-1-3'},\n     * //       {type: 'a', value: 'a-1-2'},\n     * //       {type: 'a', value: 'a-1-1'},\n     * //     ]}},\n     * //   ]}, \n     * //   {type: 'b', value: 'b', items: [\n     * //     {type: 'b', value: 'b-5'},\n     * //     {type: 'b', value: 'b-4'},\n     * //     {type: 'b', value: 'b-3'},\n     * //     {type: 'b', value: 'b-2'},\n     * //     {type: 'b', value: 'b-1'},\n     * //   ]}, \n     * //   {type: 'c', value: 'c', items: []}, \n     * //   {type: 'd', value: 'd'}, \n     * // ]\n     * @memberOf array\n     * @method deepSortBy\n     * @instance\n     * @param {array} a - the array to be sorted \n     * @param {array|string} propNames - the propName(s) you want to use for sorting\n     * @param {array|string|null} [propDirections=null] - the propDirection(s) you want to use for sorting (respect propName(s) order)\n     * @param {string} [childrenPropName='children'] - the childrenPropName to be used for sorting\n     * @return {array}\n     */\n    deepSortBy(a, propNames, propDirections = null, childrenPropName = 'children') {\n      if (Array.isArray(a)) {\n        return Array.prototype.deepSortBy.call(a, propNames, propDirections, childrenPropName);\n      }\n\n      return a;\n    },\n\n    /**\n     * filters an array by propName or predicate\n     * @example <caption>eg. usage</caption>\n     * var collection = [\n     *   {type: 'a', value: 'a'}, \n     *   {type: 'a', value: 'a-2-1'}, \n     *   {type: 'a', value: 'a-1-3'}, \n     *   {type: 'c', value: 'c'}, \n     *   {type: 'a', value: 'a-1-1'}, \n     *   {type: 'b', value: 'b'},\n     * ];\n     * \n     * console.log(Array.filterBy(collection, type, 'a'));\n     * // [\n     * //   {type: 'a', value: 'a'}, \n     * //   {type: 'a', value: 'a-2-1'}, \n     * //   {type: 'a', value: 'a-1-3'}, \n     * //   {type: 'a', value: 'a-1-1'}, \n     * // ]\n     * \n     * console.log(collection.filterBy('type', 'a')); // same as above\n     * \n     * console.log(Array.filterBy(collection, function(item) {\n     *   return item.value.contains('1');\n     * }));\n     * // [\n     * //   {type: 'a', value: 'a-2-1'}, \n     * //   {type: 'a', value: 'a-1-3'}, \n     * //   {type: 'a', value: 'a-1-1'}, \n     * // ]\n     * \n     * console.log(collection.filterBy(function(item) {\n     *   return item.value.contains('1');\n     * })); // same as above\n     * @memberOf array\n     * @method filterBy\n     * @instance\n     * @param {array} a \n     * @param {string|function} propName \n     * @param {any} propValue \n     * @return {array}\n     */\n    filterBy(a, propName, propValue) {\n      if (Array.isArray(a)) {\n        return Array.prototype.filterBy.call(a, propName, propValue);\n      }\n\n      return a;\n    },\n\n    /**\n     * removes an item from an array \n     * @example <caption>eg. usage</caption>\n     * var collection = [\n     *   {type: 'a', value: 'a'}, \n     *   {type: 'a', value: 'a-2-1'}, \n     *   {type: 'a', value: 'a-1-3'}, \n     *   {type: 'c', value: 'c'}, \n     *   {type: 'a', value: 'a-1-1'}, \n     *   {type: 'b', value: 'b'},\n     * ];\n     * \n     * console.log(Array.pull(collection, {type: 'a', value: 'a'}));\n     * // [\n     * //   {type: 'a', value: 'a-2-1'}, \n     * //   {type: 'a', value: 'a-1-3'}, \n     * //   {type: 'c', value: 'c'}, \n     * //   {type: 'a', value: 'a-1-1'}, \n     * //   {type: 'b', value: 'b'},\n     * // ]\n     * \n     * console.log(collection.pull({type: 'a', value: 'a'})); // same as above\n     * @memberOf array\n     * @method pull\n     * @instance\n     * @param {array} a \n     * @param {any} any\n     * @return {array}\n     */\n    pull(a, item) {\n      if (Array.isArray(a)) {\n        return Array.prototype.pull.call(a, item);\n      }\n\n      return a;\n    },\n\n    /**\n     * removes an item from an array by propName/propValue pair or predicate \n     * @example <caption>eg. usage</caption>\n     * var collection = [\n     *   {type: 'a', value: 'a'}, \n     *   {type: 'a', value: 'a-2-1'}, \n     *   {type: 'a', value: 'a-1-3'}, \n     *   {type: 'c', value: 'c'}, \n     *   {type: 'a', value: 'a-1-1'}, \n     *   {type: 'b', value: 'b'},\n     * ];\n     * \n     * console.log(Array.pullBy(collection, 'type', 'a'));\n     * // [\n     * //   {type: 'c', value: 'c'}, \n     * //   {type: 'b', value: 'b'},\n     * // ]\n     * \n     * console.log(collection.pullBy('type', 'a')); // same as above\n     * \n     * console.log(Array.pullBy(collection, function(item) {\n     *   return item.value.contains('1');\n     * }));\n     * // [\n     * //   {type: 'a', value: 'a'}, \n     * //   {type: 'c', value: 'c'}, \n     * //   {type: 'b', value: 'b'},\n     * // ]\n     * \n     * console.log(collection.pullBy(function(item) {\n     *   return item.value.contains('1');\n     * })); // same as above\n     * @memberOf array\n     * @method pullBy\n     * @instance\n     * @param {array} a \n     * @param {string|function} propName \n     * @param {any} propValue \n     * @return {array}\n     */\n    pullBy(a, propName, propValue) {\n      if (Array.isArray(a)) {\n        return Array.prototype.pullBy.call(a, propName, propValue);\n      }\n\n      return a;\n    },\n\n    /**\n     * finds an item in an array by propName/propValue pair or predicate, \n     * returns the first element found respecting the specified predicate\n     * @example <caption>eg. usage</caption>\n     * var collection = [\n     *   {type: 'a', value: 'a'}, \n     *   {type: 'a', value: 'a-2-1'}, \n     *   {type: 'a', value: 'a-1-3'}, \n     *   {type: 'c', value: 'c'}, \n     *   {type: 'a', value: 'a-1-1'}, \n     *   {type: 'b', value: 'b'},\n     * ];\n     * \n     * console.log(Array.findBy(collection, 'type', 'a')); // {type: 'a', value: 'a'} \n     * console.log(collection.findBy('type', 'a')); // same as above\n     * \n     * console.log(Array.findBy(collection, 'type', 'a', true)); // {type: 'a', value: 'a-1-1'} \n     * console.log(collection.findBy('type', 'a', true)); // same as above\n     * \n     * console.log(Array.findBy(collection, function(item, index, collection){\n     *   return item.value.contains('1');\n     * })); // {type: 'a', value: 'a-2-1'} \n     * \n     * console.log(collection.findBy(function(item, index, collection){\n     *   return item.value.contains('1');\n     * })); // same as above\n     * \n     * console.log(Array.findBy(collection, function(item, index, collection){\n     *   return item.value.contains('1');\n     * }, true)); // {type: 'a', value: 'a-1-1'} \n     * \n     * console.log(collection.findBy(function(item, index, collection){\n     *   return item.value.contains('1');\n     * }, true)); // same as above\n     * \n     * @memberOf array\n     * @method findBy\n     * @instance\n     * @param {array} a \n     * @param {string|function} propName \n     * @param {any} [propValue=null] \n     * @param {boolean} [reverse=false] - is true specified to search from right to left\n     * @return {any|null}\n     */\n    findBy(a, propName, propValue = null, reverse = false) {\n      if (Array.isArray(a)) {\n        return Array.prototype.findBy.call(a, propName, propValue);\n      }\n\n      return a;\n    },\n\n    /**\n     * deeply sorts an array\n     * @example <caption>eg. usage</caption>\n     * var collection = [\n     *   {type: 'b', value: 'b', items: [\n     *     {type: 'b', value: 'b-1'},\n     *     {type: 'b', value: 'b-5'},\n     *     {type: 'b', value: 'b-2'},\n     *     {type: 'b', value: 'b-4'},\n     *     {type: 'b', value: 'b-3'},\n     *   ]}, \n     *   {type: 'd', value: 'd'}, \n     *   {type: 'a', value: 'a', items: [\n     *     {type: 'a', value: 'a-1', items: [\n     *       {type: 'a', value: 'a-1-1'},\n     *       {type: 'a', value: 'a-1-3'},\n     *       {type: 'a', value: 'a-1-2'},\n     *     ]}},\n     *     {type: 'a', value: 'a-5', items: [\n     *       {type: 'a', value: 'a-5-1'},\n     *     ]}},\n     *     {type: 'a', value: 'a-2', items: [\n     *       {type: 'a', value: 'a-2-1'},\n     *       {type: 'a', value: 'a-2-3'},\n     *       {type: 'a', value: 'a-2-2'},\n     *       {type: 'a', value: 'a-2-4'},\n     *     ]}},\n     *     {type: 'a', value: 'a-4', items: [\n     *       {type: 'a', value: 'a-4-1'},\n     *     ]}},\n     *     {type: 'a', value: 'a-3', items: [\n     *       {type: 'a', value: 'a-3-2'},\n     *       {type: 'a', value: 'a-3-1'},\n     *     ]}},\n     *   ]}, \n     *   {type: 'c', value: 'c', items: []}, \n     * ];\n     * \n     * console.log(Array.deepFindBy(collection, 'value', 'a-2-1', 'items')); // {type: 'a', value: 'a-2-1'}\n     * console.log(collection.deepFindBy('value', 'a-2-1', 'items')); // same as above\n     * \n     * console.log(Array.deepFindBy(collection, function(item) {\n     *    return item.value.contains('a-2-1');\n     * }, null, 'items')); // {type: 'a', value: 'a-2-1'}\n     * \n     * console.log(collection.deepFindBy(function(item) {\n     *    return item.value.contains('a-2-1');\n     * }, null, 'items')); // same as above\n     * \n     * @memberOf array\n     * @method deepFindBy\n     * @instance\n     * @param {array} a - the array \n     * @param {string|function} propName - the propName you want to use for the deep find\n     * @param {any} [propValue=null] - the propValue you want to use for the deep find\n     * @param {string} [childrenPropName='children'] - the childrenPropName to be used for the deep find recursion\n     * @return {array}\n     */\n    deepFindBy(a, propName, propValue = null, childrenPropName = 'children') {\n      if (Array.isArray(a)) {\n        return Array.prototype.deepFindBy.call(a, propName, propValue, childrenPropName);\n      }\n\n      return a;\n    },\n\n    /**\n     * finds the index of an item in an array by propName/propValue pair or predicate, \n     * returns the first element found respecting the specified predicate\n     * @example <caption>eg. usage</caption>\n     * var collection = [\n     *   {type: 'a', value: 'a'}, \n     *   {type: 'a', value: 'a-2-1'}, \n     *   {type: 'a', value: 'a-1-3'}, \n     *   {type: 'c', value: 'c'}, \n     *   {type: 'a', value: 'a-1-1'}, \n     *   {type: 'b', value: 'b'},\n     * ];\n     * \n     * console.log(Array.indexBy(collection, 'type', 'a')); // 0\n     * console.log(collection.indexBy('type', 'a')); // same as above\n     * \n     * console.log(Array.indexBy(collection, 'type', 'a', true)); // 4\n     * console.log(collection.indexBy('type', 'a', true)); // same as above\n     * \n     * console.log(Array.indexBy(collection, function(item, index, collection){\n     *   return item.value.contains('1');\n     * })); // 1\n     * \n     * console.log(collection.indexBy(function(item, index, collection){\n     *   return item.value.contains('1');\n     * })); // same as above\n     * \n     * console.log(Array.indexBy(collection, function(item, index, collection){\n     *   return item.value.contains('1');\n     * }, true)); // 4\n     * \n     * console.log(collection.indexBy(function(item, index, collection){\n     *   return item.value.contains('1');\n     * }, true)); // same as above\n     * \n     * @memberOf array\n     * @method indexBy\n     * @instance\n     * @param {array} a \n     * @param {string|function} propName \n     * @param {any} [propValue=null] \n     * @param {boolean} [reverse=false] - is true specified to search from right to left\n     * @return {any|null}\n     */\n    indexBy(a, propName, propValue, reverse = false) {\n      if (Array.isArray(a)) {\n        return Array.prototype.indexBy.call(a, propName, propValue, reverse);\n      }\n\n      return a;\n    },\n\n    /**\n     * checks if an array contains an item by propName/propValue pair or predicate, \n     * @example <caption>eg. usage</caption>\n     * var collection = [\n     *   {type: 'a', value: 'a'}, \n     *   {type: 'a', value: 'a-2-1'}, \n     *   {type: 'a', value: 'a-1-3'}, \n     *   {type: 'c', value: 'c'}, \n     *   {type: 'a', value: 'a-1-1'}, \n     *   {type: 'b', value: 'b'},\n     *   {type: 'b', value: 'b-1-1'},\n     * ];\n     * \n     * console.log(Array.containsBy(collection, 'value', 'a-2-2')); // false\n     * console.log(collection.containsBy('value', 'a-2-2')); // same as above\n     * \n     * console.log(Array.containsBy(collection, 'value', 'a-2-1')); // true\n     * console.log(collection.containsBy('value', 'a-2-1')); // same as above\n     * \n     * console.log(Array.containsBy(collection, function(item) {\n     *   return item.type === 'c';\n     * })); // true\n     * \n     * console.log(collection.containsBy(function(item) {\n     *   return item.type === 'c';\n     * })); // same as above\n     * @memberOf array\n     * @method containsBy\n     * @instance\n     * @param {array} a \n     * @param {string|function} propName \n     * @param {any} [propValue=null] \n     * @return {any|null}\n     */\n    containsBy(a, propName, propValue = null) {\n      if (Array.isArray(a)) {\n        return Array.prototype.containsBy.call(a, propName, propValue);\n      }\n\n      return false;\n    },\n\n    /**\n     * counts items in array that respects propName/propValue pair or predicate, \n     * @example <caption>eg. usage</caption>\n     * var collection = [\n     *   {type: 'a', value: 'a'}, \n     *   {type: 'a', value: 'a-2-1'}, \n     *   {type: 'a', value: 'a-1-3'}, \n     *   {type: 'c', value: 'c'}, \n     *   {type: 'a', value: 'a-1-1'}, \n     *   {type: 'b', value: 'b'},\n     *   {type: 'b', value: 'b-1-1'},\n     * ];\n     * \n     * console.log(Array.countBy(collection, 'type', 'a')); // 4\n     * console.log(collection.countBy('type', 'a')); // same as above\n     * \n     * console.log(Array.countBy(collection, 'type', 'a', true)); // 3, it counts false values\n     * console.log(collection.countBy('type', 'a', true)); // same as above\n     * \n     * console.log(Array.countBy(collection, function(item) {\n     *   return item.type === 'b';\n     * })); // 2\n     * \n     * console.log(collection.countBy(function(item) {\n     *   return item.type === 'b';\n     * })); // same as above\n     * \n     * console.log(Array.countBy(collection, function(item) {\n     *   return item.type === 'b';\n     * }, null, true)); // 5, it counts false values\n     * \n     * console.log(collection.countBy(function(item) {\n     *   return item.type === 'b';\n     * }, null, true)); // same as above\n     * @memberOf array\n     * @method countBy\n     * @instance\n     * @param {array} a \n     * @param {string|function} propName \n     * @param {any|null} [propValue=null] \n     * @param {boolean} [falseValues=false]\n     * @return {number}\n     */\n    countBy(a, propName, propValue = null, falseValues = false) {\n      if (Array.isArray(a)) {\n        return Array.prototype.countBy.call(a, propName, propValue, falseValues);\n      }\n\n      return 0;\n    },\n\n    /**\n     * returns a new array with the intersection of passed arrays \n     * @example <caption>eg. usage</caption>\n     * var a = [1, 2, 3, 4, 5];\n     * var b = [1, 4, 5, 7, 8];\n     * \n     * console.log(Array.intersection(a, b)); // [1, 4, 5]\n     * console.log(a.intersection(b)); // same as above\n     * \n     * var a = [\n     *   {type: 1, value: 1},\n     *   {type: 1, value: 2},\n     *   {type: 2, value: 1},\n     *   {type: 2, value: 2},\n     *   {type: 3, value: 1},\n     * ];\n     * \n     * var b = [\n     *   {type: 1, value: 1},\n     *   {type: 2, value: 1},\n     *   {type: 2, value: 3},\n     *   {type: 3, value: 2},\n     *   {type: 4, value: 1},\n     *   {type: 5, value: 1},\n     * ];\n     * \n     * console.log(Array.intersection(a, b));\n     * // [\n     * //   {type: 1, value: 1},\n     * //   {type: 2, value: 1},\n     * // ]\n     * \n     * console.log(a.intersection(b)); // same as above\n     * \n     * var c = [\n     *   {type: 1, value: 1},\n     *   {type: 1, value: 2},\n     *   {type: 2, value: 4},\n     * ];\n     * \n     * console.log(Array.intersection(a, b, c));\n     * // [\n     * //   {type: 1, value: 1},\n     * // ]\n     * \n     * console.log(a.intersection(b, c)); // same as above\n     * \n     * @memberOf array\n     * @method intersection\n     * @instance\n     * @param {array} a \n     * @param {...array} arrays \n     * @return {any|null}\n     */\n    intersection(a, ...arrays) {\n      if (Array.isArray(a)) {\n        return Array.prototype.intersection.call(a, ...arrays);\n      }\n\n      return [];\n    },\n\n    /**\n     * returns a new array with the union of passed arrays \n     * @example <caption>eg. usage</caption>\n     * var a = [1, 2, 3, 4, 5];\n     * var b = [1, 4, 5, 7, 8];\n     * \n     * console.log(Array.union(a, b)); // [1, 2, 3, 4, 5, 7, 8]\n     * console.log(a.union(b)); // same as above\n     * \n     * var a = [\n     *   {type: 1, value: 1},\n     *   {type: 1, value: 2},\n     *   {type: 2, value: 1},\n     *   {type: 2, value: 2},\n     *   {type: 3, value: 1},\n     * ];\n     * \n     * var b = [\n     *   {type: 1, value: 1},\n     *   {type: 2, value: 1},\n     *   {type: 2, value: 3},\n     *   {type: 3, value: 2},\n     *   {type: 4, value: 1},\n     *   {type: 5, value: 1},\n     * ];\n     * \n     * console.log(Array.union(a, b));\n     * // [\n     * //   {type: 1, value: 1},\n     * //   {type: 1, value: 2},\n     * //   {type: 2, value: 1},\n     * //   {type: 2, value: 2},\n     * //   {type: 3, value: 1},\n     * //   {type: 2, value: 3},\n     * //   {type: 4, value: 1},\n     * //   {type: 5, value: 1},\n     * // ]\n     * \n     * console.log(a.union(b)); // same as above\n     * \n     * var c = [\n     *   {type: 1, value: 1},\n     *   {type: 1, value: 2},\n     *   {type: 2, value: 4},\n     * ];\n     * \n     * console.log(Array.union(a, b, c));\n     * // [\n     * //   {type: 1, value: 1},\n     * //   {type: 1, value: 2},\n     * //   {type: 2, value: 1},\n     * //   {type: 2, value: 2},\n     * //   {type: 3, value: 1},\n     * //   {type: 2, value: 3},\n     * //   {type: 4, value: 1},\n     * //   {type: 5, value: 1},\n     * //   {type: 2, value: 4},\n     * // ]\n     * \n     * console.log(a.union(b, c)); // same as above\n     * @memberOf array\n     * @method union\n     * @instance\n     * @param {array} a \n     * @param {...array} arrays \n     * @return {any|null}\n     */\n    union(a, ...arrays) {\n      if (Array.isArray(a)) {\n        return Array.prototype.union.call(a, ...arrays);\n      }\n\n      return [];\n    },\n\n    /**\n     * @alias array.pullBy\n     * @memberOf array\n     * @method removeBy\n     * @instance\n     * @param {array} a \n     * @param {string|function} propName \n     * @param {any} [propValue=null] \n     * @return {array}\n     */\n    removeBy(a, propName, propValue = null) {\n      if (Array.isArray(a)) {\n        return Array.prototype.pullBy.call(a, propName, propValue);\n      }\n\n      return a;\n    },\n\n    /**\n     * randomizes an item from an array, with optional weight parameters\n     * @example <caption>eg. usage</caption>\n     * var a = [1, 2, 3, 4, 5];\n     * \n     * console.log(Array.random(a)); // eg. 3\n     * console.log(a.random()); // same as above\n     * \n     * var a = [\n     *   {type: 'a', value: 1},\n     *   {type: 'b', value: 2},\n     *   {type: 'c', value: 3},\n     *   {type: 'd', value: 4},\n     * ];\n     * \n     * console.log(Array.random(a)); // eg. {type: 'a', value: 1}\n     * console.log(a.random()); // same as above\n     * \n     * var a = [\n     *   {type: 'a', value: 1, weight: 3},\n     *   {type: 'b', value: 2, weight: 5},\n     *   {type: 'c', value: 3, weight: 1},\n     *   {type: 'd', value: 4, weight: 1},\n     * ];\n     * \n     * console.log(Array.random(a, 'weight')); // eg. {type: 'b', value: 2}\n     * console.log(a.random('weight')); // same as above\n     * \n     * console.log(Array.random(a, 'weight', 'value')); // eg. 2\n     * console.log(a.random('weight', 'value')); // same as above\n     * @memberOf array\n     * @method random\n     * @instance\n     * @param {array} a \n     * @param {string} [weightField=null]\n     * @param {string} [valueField=null] \n     * @return {any|null}\n     */\n    random(a, weightField = null, valueField = null) {\n      if (Array.isArray(a)) {\n        return Array.prototype.random.call(a, weightField, valueField);\n      }\n\n      return null;\n    },\n\n    /**\n     * executes an iteratee n times as the array length, the iteratee will be invoked with tree arguments item, index, array\n     * @example <caption>eg. usage</caption>\n     * var a = [\n     *   {type: 'a', value: 1},\n     *   {type: 'b', value: 2},\n     *   {type: 'c', value: 3},\n     *   {type: 'd', value: 4},\n     * ];\n     * \n     * Array.each(a, function(item, index) {\n     *   console.log(item.type);\n     * });\n     * \n     * // it logs\n     * // 'a'\n     * // 'b'\n     * // 'c'\n     * // 'd'\n     * \n     * Array.each(a, function(item, index) {\n     *   console.log(item.type);\n     * }, true);\n     * \n     * // it logs\n     * // 'd'\n     * // 'c'\n     * // 'b'\n     * // 'a'\n     * @memberOf array\n     * @method each\n     * @instance\n     * @param {array} a \n     * @param {function} iteratee\n     * @param {boolean} [reverse=false] - true if you want to do a reverse cycle\n     * @return {array}\n     */\n    each(a, iteratee, reverse = false) {\n      if (Array.isArray(a)) {\n        return Array.prototype.each.call(a, iteratee, reverse);\n      }\n\n      return a;\n    },\n\n    /**\n     * returns the first item in an array, with optional propName/propValue pair or predicate\n     * @example <caption>eg. usage</caption>\n     * var a = [\n     *   {type: 'a', value: 1},\n     *   {type: 'b', value: 2},\n     *   {type: 'c', value: 3},\n     *   {type: 'd', value: 4},\n     * ];\n     * \n     * console.log(Array.first(a)); // {type: 'a', value: 1}\n     * console.log(a.first())); // {type: 'a', value: 1}\n     * \n     * var a = [\n     *   {type: 'a', value: 1},\n     *   {type: 'b', value: 1},\n     *   {type: 'b', value: 2},\n     *   {type: 'c', value: 3},\n     *   {type: 'd', value: 4},\n     * ];\n     * \n     * console.log(Array.first(a, 'type', 'b')); // {type: 'b', value: 1}\n     * console.log(a.first('type', 'b'))); // {type: 'b', value: 1}\n     * @memberOf array\n     * @method first\n     * @instance\n     * @param {array} a - the array\n     * @param {string} [propName=null] - optional, combined with propValue filters the array before extracting the first item<br>\n     * or you can specify an optional function as predicate to customize the filter\n     * @param {string} [propValue=null] - optional, combined with propName filters the array before extracting the first item\n     * @return {any}\n     */\n    first(a, propName = null, propValue = null) {\n      if (Array.isArray(a)) {\n        return Array.prototype.first.call(a, propName, propValue);\n      }\n\n      return a;\n    },\n\n    /**\n     * returns the last item in an array, with optional propName/propValue pair or predicate\n     * @example <caption>eg. usage</caption>\n     * var a = [\n     *   {type: 'a', value: 1},\n     *   {type: 'b', value: 2},\n     *   {type: 'c', value: 3},\n     *   {type: 'd', value: 4},\n     * ];\n     * \n     * console.log(Array.last(a)); // {type: 'd', value: 4}\n     * console.log(a.last())); // {type: 'd', value: 4}\n     * \n     * var a = [\n     *   {type: 'a', value: 1},\n     *   {type: 'a', value: 2},\n     *   {type: 'b', value: 2},\n     *   {type: 'c', value: 3},\n     *   {type: 'd', value: 4},\n     * ];\n     * \n     * console.log(Array.last(a, 'type', 'a')); // {type: 'a', value: 2}\n     * console.log(a.last('type', 'a'))); // {type: 'a', value: 2}\n     * @memberOf array\n     * @method last\n     * @instance\n     * @param {array} a \n     * @param {string|function} [propName=null] - optional, combined with propValue filters the array before extracting the last item<br>\n     * or you can specify an optional function as predicate to customize the filter\n     * @param {string} [propValue=null] - optional, combined with propName filters the array before extracting the last item\n     * @return {any}\n     */\n    last(a, propName = null, propValue = null) {\n      if (Array.isArray(a)) {\n        return Array.prototype.last.call(a, propName, propValue);\n      }\n\n      return a;\n    },\n\n    /**\n     * sums a collection by predicate or propName\n     * @example <caption>eg. usage</caption>\n     * var a = [\n     *   {type: 'a', value: 1},\n     *   {type: 'b', value: 2},\n     *   {type: 'c', value: 3},\n     *   {type: 'd', value: 4},\n     * ];\n     * \n     * console.log(Array.sum(a, 'value', 0)); // 4 + 3 + 2 + 1 = 10\n     * console.log(a.sum('value', 0))); // same as above\n     * \n     * console.log(Array.sum(a, 'type', '')); // abcd\n     * console.log(a.sum('type', ''))); // same as above\n     * \n     * console.log(Array.sum(a, function(acc, item) {\n     *   return acc + item.value;\n     * }, 0)); // 4 + 3 + 2 + 1 = 10\n     * \n     * console.log(a.sum(function(acc, item) {\n     *   return acc + item.value;\n     * }, 0)); // same as above\n     * @memberOf array\n     * @method sum\n     * @instance\n     * @param {array} a \n     * @param {function|string} predicate - the predicate should look like this in ES5<br>\n     * <pre>\n     * function(acc, item) {\n     *   return acc + item[propName];\n     * }\n     * </pre>\n     * or in ES6<br>\n     * <pre>\n     * (acc, item) => {\n     *   return acc + item[propName];\n     * }\n     * </pre><br>\n     * this kind of predicate will be implemented automatically if you specify a propName instead the predicate\n     * @param {object|any} predicate.acc - the accumulator variable used for the sum\n     * @param {object|any} predicate.item - the iterating item\n     * @param {any} [startValue=0]\n     * @return {any}\n     */\n    sum(a, propName, startValue = 0) {\n      if (Array.isArray(a)) {\n        return Array.prototype.sum.call(a, propName, startValue);\n      }\n\n      return a;\n    },\n    /**\n     * deeply maps a recursive tree structure with (same structure) childrenPropName or 'children' property<br><br>\n     * {@link lodash#deepMap|for examples see lodash.deepMap}\n     * @memberOf array\n     * @method deepMap\n     * @instance\n     * @param {array|object} a - the array to use for the deep mapping\n     * @param {string} [childrenPropName='children'] - the property name to use for children collection\n     * @param {function} iteratee - the item mapping iteratee\n     */\n    deepMap(a, childrenPropName = 'children', iteratee) {\n      if (Array.isArray(a)) {\n        return Array.prototype.deepMap.call(a, childrenPropName, iteratee);\n      }\n\n      return a;\n    },\n    /**\n     * loremizes an array\n     * @example <caption>eg. usage</caption>\n     * console.log(Array.lorem(5)); // [1, 2, 3, 4, 5];\n     * \n     * console.log(Array.lorem(5, 1)); // [1, 1, 1, 1, 1];\n     * \n     * console.log(Array.lorem(5, '1')); // ['1', '1', '1', '1', '1'];\n     * \n     * console.log(Array.lorem(5, {type: 'a', value: 1})); \n     * // it logs\n     * [\n     *   {type: 'a', value: 1}, \n     *   {type: 'a', value: 1}, \n     *   {type: 'a', value: 1}, \n     *   {type: 'a', value: 1}, \n     *   {type: 'a', value: 1} \n     * ];\n     * \n     * console.log(Array.lorem(5, function(index) {\n     *   return {\n     *     type: 'a',\n     *     value: index,\n     *   };\n     * });\n     * // it logs\n     * [\n     *   {type: 'a', value: 1}, \n     *   {type: 'a', value: 2}, \n     *   {type: 'a', value: 3}, \n     *   {type: 'a', value: 4}, \n     *   {type: 'a', value: 5} \n     * ];\n     * \n     * @memberOf array\n     * @method lorem\n     * @instance\n     * @param {number} items \n     * @param {function|object} [model=false] \n     * @return {array} \n     */\n    lorem(items, model = false) {\n      return Array.prototype.lorem.call(items, model);\n    },\n\n    /**\n     * flattens array a single level deep,<br>\n     * or with deep parameter (true boolean) recursively flattens array,<br>\n     * or with deep parameter (number) you specify the recursion depth\n     * @example <caption>eg. usage</caption>\n     * var a = [1, [2, [3, [4]], 5]];\n     * \n     * console.log(Array.flatten(a)); // [1, 2, [3, [4]], 5]\n     * console.log(Array.flatten(a, 1)); // same as above\n     * console.log(a.flatten()); // same as above\n     * console.log(a.flatten(1)); // same as above\n     * \n     * console.log(Array.flatten(a, true)); // [1, 2, 3, 4, 5]\n     * console.log(a.flatten(true)); // same as above\n     * \n     * console.log(Array.flatten(a, 2)); // [1, 2, 3, [4], 5]\n     * console.log(a.flatten(2)); // same as above\n     * \n     * console.log(Array.flatten(a, 3)); // [1, 2, 3, 4, 5]\n     * console.log(a.flatten(3)); // same as above\n     * @memberOf array\n     * @method flatten\n     * @instance\n     * @param {array} a - the array \n     * @param {boolean|number} [deep=false] - the deep (boolean) or depth (number) parameter specifies to do a full recursion or the recursion depth\n     * @return {array} \n     */\n    flatten(a, deep = false) {\n      if (Array.isArray(a)) {\n        return Array.prototype.flatten.call(a, deep);\n      }\n\n      return a;\n    },\n    /**\n     * creates an array of shuffled values, using a version of the Fisher-Yates shuffle. (from lodash documentation)\n     * @example <caption>eg. usage</caption>\n     * var a = [1, 2, 3, 4, 5];\n     * \n     * console.log(Array.shuffle(a)); // [4, 3, 5, 1, 2]\n     * console.log(a.shuffle()); // same as above (or another randomization ;-) \n     * @memberOf array\n     * @method shuffle\n     * @instance\n     * @param {array} a - the array \n     * @return {array} \n     */\n    shuffle(a) {\n      if (Array.isArray(a)) {\n        return Array.prototype.shuffle.call(a);\n      }\n\n      return a;\n    },\n\n    /**\n     * splits an array in n-pieces chunks\n     * @example <caption>eg. usage</caption>\n     * var a = [1, 2, 3, 4, 5];\n     *\n     * console.log(Array.split(a)); // []\n     * console.log(a.split()); // same as above\n     * \n     * console.log(Array.split(a, 1)); // [[1], [2], [3], [4], [5]]\n     * console.log(a.split(1)); // same as above\n     * \n     * console.log(Array.split(a, 2)); // [[1, 2], [3, 4], [5]]\n     * console.log(a.split(2)); // same as above\n     * \n     * console.log(Array.split(a, 3)); // [[1, 2, 3], [4, 5]]\n     * console.log(a.split(3)); // same as above\n     * @memberOf array\n     * @method split\n     * @instance\n     * @param {array} a - the array \n     * @param {number} [n=0] - the n pieces of chunks you want\n     * @return {array} \n     */\n    split(a, n = 0) {\n      if (Array.isArray(a)) {\n        return Array.prototype.split.call(a, n);\n      }\n\n      return a;\n    },\n\n    /**\n     * reverses an array, with optional clone parameter to avoid original array mutation\n     * @example <caption>eg. usage</caption>\n     * var a = [1, 2, 3, 4, 5];\n     *\n     * console.log(Array.reverse(a)); // [5, 4, 3, 2, 1]\n     * console.log(a.reverse()); // same as above\n     * \n     * console.log(a === [5, 4, 3, 2, 1]); // true\n     * \n     * var b = Array.reverse(a, true); // or var b = a.reverse(true);\n     * \n     * console.log(a); // [1, 2, 3, 4, 5]\n     * console.log(b); // [5, 4, 3, 2, 1]\n     * @memberOf array\n     * @method tail\n     * @instance\n     * @param {array} a - the array \n     * @param {boolean} [clone=false] \n     * @return {array} \n     */\n    reverse(a, clone = false) {\n      if (Array.isArray(a)) {\n        return Array.prototype.reverse.call(a, clone);\n      }\n\n      return a;\n    },\n\n    /**\n     * returns a sliced array with all elements but the first item\n     * @example <caption>eg. usage</caption>\n     * var a = [1, 2, 3, 4, 5];\n     *\n     * console.log(Array.tail(a)); // [2, 3, 4, 5]\n     * console.log(a.tail()); // same as above\n     * @memberOf array\n     * @method tail\n     * @instance\n     * @param {array} a - the array \n     * @return {array} \n     */\n    tail(a) {\n      if (Array.isArray(a)) {\n        return Array.prototype.tail.call(a);\n      }\n\n      return a;\n    },\n\n    /**\n     * returns a sliced array with all elements but the last item\n     * @example <caption>eg. usage</caption>\n     * var a = [1, 2, 3, 4, 5];\n     *\n     * console.log(Array.cut(a)); // [1, 2, 3, 4]\n     * console.log(a.cut()); // same as above\n     * @memberOf array\n     * @method cut\n     * @instance\n     * @param {array} a - the array \n     * @return {array} \n     */\n    cut(a) {\n      if (Array.isArray(a)) {\n        return Array.prototype.cut.call(a);\n      }\n\n      return a;\n    },\n\n    /**\n     * clones an array\n     * @example <caption>eg. usage</caption>\n     * var collection = [\n     *   {type: 'a', value: 1}, \n     *   {type: 'b', value: 8}, \n     *   {type: 'c', value: 5}, \n     *   {type: 'd', value: 7}, \n     *   {type: 'e', value: 9}, \n     *   {type: 'f', value: 3},\n     * ];\n     *\n     * var clone = Array.clone(collection); // or var clone = collection.clone();\n     * \n     * console.log(collection === clone); // false;\n     * @memberOf array\n     * @method clone\n     * @instance\n     * @param {array} a - the array \n     * @return {array} \n     */\n    clone(a) {\n      if (Array.isArray(a)) {\n        return Array.prototype.clone.call(a);\n      }\n\n      return a;\n    },\n\n    /**\n     * finds max value by propName in a collection array\n     * @example <caption>eg. usage</caption>\n     * var collection = [\n     *   {type: 'a', value: 1}, \n     *   {type: 'b', value: 8}, \n     *   {type: 'c', value: 5}, \n     *   {type: 'd', value: 7}, \n     *   {type: 'e', value: 9}, \n     *   {type: 'f', value: 3},\n     * ];\n     *\n     * console.log(Array.maxBy(a, 'value')); // {type:'e', value: 9}\n     * console.log(Array.maxBy(a, 'type')); // {type:'f', value: 3}\n     * \n     * console.log(a.maxBy('value')); // {type:'e', value: 9}\n     * console.log(a.maxBy('type')); // {type:'f', value: 3}\n     * @memberOf array\n     * @method maxBy\n     * @instance\n     * @param {array} a - the array to check for max value \n     * @param {string} [propName=null] - the property name to use for comparation\n     * @return {object}\n     */\n    maxBy(a, propName) {\n      if (Array.isArray(a)) {\n        return Array.prototype.maxBy.call(a, propName);\n      }\n\n      return a;\n    },\n  },\n  prototype: {\n    isArray() {\n      return _.isArray(this);\n    },\n\n    contains(item, all = false) {\n      if (_.isArray(item)) {\n        if (!!all) {\n          return _.difference(item, this).length === 0;\n        }\n\n        return _.intersection(this, item).length > 0;\n      }\n\n      return _.includes(this, item);\n    },\n\n    concat(arr) {\n      if (!!arr) {\n        return _.concat(this, arr);\n      }\n\n      return this;\n    },\n\n    distinct() {\n      return _.uniqWith(this, _.isEqual);\n    },\n\n    diff(arr, fn = null) {\n      if (Array.isArray(arr)) {\n        let predicate = _.isEqual;\n\n        if (String.isString(fn)) {\n          const propName = fn;\n          predicate = (aitem, bitem) => {\n            return aitem[propName] === bitem[propName];\n          };\n        }\n\n        if (Function.isFunction(fn)) {\n          predicate = fn;\n        }\n\n        return _.differenceWith(this, arr, predicate);\n      }\n\n      return [];\n    },\n\n    diffBy(arr, propName) {\n      return this.diff(arr, propName);\n    },\n\n    sortBy(propNames, propDirections) {\n      if (String.isString(propNames)) {\n        propNames = [propNames];\n      }\n\n      if (!!propDirections) {\n        if (String.isString(propDirections)) {\n          propDirections = [propDirections];\n        }\n      } else {\n        propDirections = propNames.map(() => {\n          return 'asc';\n        });\n      }\n\n      return _.orderBy(this, propNames, propDirections);\n    },\n\n    deepSortBy(propNames, propDirections = null, childrenPropName = 'children') {\n      if (String.isString(propNames)) {\n        propNames = [propNames];\n      }\n\n      if (!!propDirections) {\n        if (String.isString(propDirections)) {\n          propDirections = [propDirections];\n        }\n      } else {\n        propDirections = propNames.map(() => {\n          return 'asc';\n        });\n      }\n\n      return _.deepOrderBy(this, propNames, propDirections, childrenPropName);\n    },\n\n    filterBy(propNames, propValues) {\n      let predicate = null;\n\n      if (Function.isFunction(propNames)) {\n        predicate = propNames;\n        return _.filter(this, predicate);\n      } else if (Array.isArray(propValues)) {\n        return _.filterByValues(this, propNames, propValues);\n      }\n\n      predicate = {};\n      predicate[propNames] = propValues;\n      return _.filter(this, predicate) || [];\n    },\n\n    pull(item) {\n      return _.pull(this, item);\n    },\n\n    pullBy(propName, propValue) {\n      if (_.isArray(propName) && _.isFunction(propValue)) {\n        const values = propName;\n        const comparator = propValue;\n        return _.pullAllByComparator(this, values, comparator);\n      }\n\n      const predicate = {};\n      predicate[propName] = propValue;\n      return _.pullAllBy(this, [predicate]);\n    },\n\n    findBy(propName, propValue = null, reverse = false) {\n      let predicate = null;\n\n      if (Function.isFunction(propName) || Object.isObject(propName)) {\n        predicate = propName;\n      } else if (String.isString(propName)) {\n        predicate = {};\n        predicate[propName] = propValue;\n      }\n\n      if (predicate) {\n        if (reverse) {\n          return _.findLast(this, predicate);\n        }\n\n        return _.find(this, predicate);\n      }\n\n      return null;\n    },\n\n    deepFindBy(propName, propValue = null, childrenPropName = 'children') {\n      return _.deepFindBy(this, propName, propValue, childrenPropName);\n    },\n\n    indexBy(propName, propValue, reverse = false) {\n      let predicate = null;\n\n      if (Function.isFunction(propName) || Object.isObject(propName)) {\n        predicate = propName;\n      } else if (String.isString(propName)) {\n        predicate = {};\n        predicate[propName] = propValue;\n      }\n\n      if (predicate) {\n        if (reverse) {\n          return _.findLastIndex(this, predicate);\n        }\n\n        return _.findIndex(this, predicate);\n      }\n\n      return null;\n    },\n\n    containsBy(propName, propValue) {\n      return this.findBy(propName, propValue) !== undefined;\n    },\n\n    countBy(propName, propValue, falseValues) {\n      let predicate = null;\n\n      if (Function.isFunction(propName) || Object.isObject(propName)) {\n        predicate = propName;\n      } else if (String.isString(propName)) {\n        predicate = {};\n        predicate[propName] = propValue;\n      }\n\n      if (!!predicate) {\n        return _.countBy(this, predicate)[!!falseValues ? 'false' : 'true'];\n      }\n\n      return 0;\n    },\n\n    intersection(...arrays) {\n      return _.intersection(this, ...arrays);\n    },\n\n    union(...arrays) {\n      return _.unionWith(this, ...arrays, _.isEqual);\n    },\n\n    random(weightField = null, valueField = null) {\n      if (!!weightField) {\n        return this.map((item) => {\n          return _.times(item[weightField || 'weight'], () => {\n            if (!!valueField) {\n              return item[valueField || 'value'];\n            }\n\n            return _.omit(item, weightField);\n          });\n        }).flatten().shuffle().first();\n      }\n\n      return _.sample(this);\n    },\n\n    each(iteratee, reverse = false) {\n      if (!!reverse) {\n        return _.eachRight(this, iteratee);\n      }\n\n      return _.each(this, iteratee);\n    },\n\n    first(propName, propValue) {\n      let a = this;\n\n      if (!!propName) {\n        a = this.filterBy(propName, propValue);\n      }\n\n      return _.first(a);\n    },\n\n    last(propName, propValue) {\n      let a = this;\n\n      if (!!propName) {\n        a = this.filterBy(propName, propValue);\n      }\n\n      return _.last(a);\n    },\n\n    sum(propName, startValue = 0) {\n      let predicate = null;\n\n      if (Function.isFunction(propName)) {\n        predicate = propName;\n      } else {\n        predicate = (acc, item) => {\n          return acc + item[propName];\n        };\n      }\n\n      return _.reduce(this, predicate, startValue);\n    },\n\n    deepMap(childrenPropName = 'children', iteratee) {\n      return _.deepMap(this, childrenPropName, iteratee);\n    },\n\n    lorem(items, model = false) {\n      return Number.times(items, (i) => {\n        if (!!model) {\n          return Function.isFunction(model) ? model(i) : model;\n        }\n\n        return i;\n      });\n    },\n\n    flatten(deep) {\n      if (!!deep) {\n        if (Number.isNumber(deep)) {\n          return _.flattenDepth(this, deep);\n        } else if (Boolean.isBoolean(deep)) {\n          return _.flattenDeep(this);\n        }\n      }\n\n      return _.flatten(this);\n    },\n\n    shuffle() {\n      return _.shuffle(this);\n    },\n\n    split(n = 0) {\n      return _.chunk(this, n);\n    },\n\n    reverse(clone = false) {\n      if (!!clone) {\n        return _.reverse(_.clone(this));\n      }\n\n      return _.reverse(this);\n    },\n\n    tail() {\n      return _.tail(this);\n    },\n\n    cut() {\n      return _.initial(this);\n    },\n\n    clone() {\n      return [...this];\n    },\n\n    maxBy(propName = null) {\n      if (propName) {\n        return _.maxBy(this, propName);\n      }\n\n      return null;\n    },\n  },\n};\n","import _ from 'lodash';\n\n/**\n * @namespace boolean\n * @description the JS native Boolean class\n */\nexport default {\n  native: {\n    /**\n     * isBoolean\n     * @example <caption>eg. usage</caption>\n     * var b = true;\n     *\n     * console.log(Boolean.isBoolean(b)); // true\n     *\n     * console.log(Boolean.isBoolean(2)); // false\n     *\n     * console.log(Boolean.isBoolean(false)); // true\n     *\n     * console.log(Boolean.isBoolean(null)); // false\n     * @memberOf boolean\n     * @method isBoolean\n     * @instance\n     * @return {boolean}\n     */\n    isBoolean(b) {\n      return Boolean.prototype.isBoolean.call(b);\n    },\n    /**\n     * randomizes a boolean value\n     * @example <caption>eg. usage</caption>\n     * console.log(Boolean.random()); // it logs true or false\n     * @memberOf boolean\n     * @method random\n     * @instance\n     * @return {boolean}\n     */\n    random() {\n      return Math.random() >= 0.5;\n    },\n  },\n  prototype: {\n    isBoolean() {\n      return _.isBoolean(this);\n    },\n  },\n};\n","import _ from 'lodash';\n\nexport default {\n  /**\n   * delays a function by specified ms\n   * @example <caption>eg. usage</caption>\n   * Æ’.delay(function() {\n       *   console.log('ended')\n       * }, 1000);\n   *\n   * // it logs 'ended' after 1000ms\n   * @memberOf FlavorJS\n   * @method delay\n   * @instance\n   * @param {function} fn - function to invoke\n   * @param {number} ms - time to wait in milliseconds\n   * @return {function}\n   */\n  delay(fn, ms) {\n    return _.delay(fn, ms);\n  },\n};\n","import _ from 'lodash';\n\n/**\n * @namespace date\n * @description the JS native Date class\n */\nexport default {\n  native: {\n    /**\n     * checks if something is a date\n     * @example <caption>eg.usage</caption>\n     * console.log(Date.isDate(new Date())); // true\n     *\n     * console.log(Date.isDate(0)); // false\n     * @memberOf date\n     * @method isDate\n     * @instance\n     * @param {*} d - the value to check\n     * @return {boolean}\n     */\n    isDate(d) {\n      return Date.prototype.isDate.call(d);\n    },\n\n    /**\n     * returns a random date between specified range (default now <-> now)\n     * @example <caption>eg. usage</caption>\n     * console.log(Date.random()); // Mon Jan 22 2018 14:07:09 GMT+0100 (CET)\n     * \n     * console.log(Date.random(new Date(1970, 0, 1), new Date())); // Sun Apr 05 1987 00:00:00 GMT+0200 (CEST)\n     * @memberOf date\n     * @method random\n     * @instance\n     * @param {date} startDate - the range start date\n     * @param {date} endDate - the range end date\n     * @return {date}\n     */\n    random(startDate = new Date(), endDate = new Date()) {\n      return new Date(Math.random() * (endDate.getTime() - startDate.getTime()) + startDate.getTime());\n    },\n\n    /**\n     * transforms a date in a UTC timestamp integer\n     * @example <caption>eg. usage</caption>\n     * console.log((new Date()).toTimestamp()); // 1491317811925 @ 2017-04-4-16:57\n     * @memberOf date\n     * @method toTimestamp\n     * @instance\n     * @param {date} d - the date to convert\n     * @return {timestamp|0}\n     */\n    toTimestamp(d) {\n      if (!Date.isDate(d)) {\n        return 0;\n      }\n\n      return Date.prototype.toTimestamp.call(d);\n    },\n  },\n  prototype: {\n    isDate() {\n      return _.isDate(this);\n    },\n\n    toTimestamp() {\n      return Math.round(this);\n    },\n  },\n};\n","import _ from 'lodash';\n\n/**\n * @namespace function\n * @description the JS native Function class\n */\nexport default {\n  native: {\n    /**\n     * checked if something is a function\n     * @example <caption>eg. usage</caption>\n     * var f = function(){};\n     *\n     * console.log(Function.isFunction(f)); // true\n     *\n     * console.log(Function.isFunction(2)); // false\n     *\n     * console.log(Function.isFunction(function(){})); // true\n     *\n     * console.log(Function.isFunction(null)); // false\n     * @memberOf function\n     * @method isFunction\n     * @instance\n     * @param {function} f - the function to be checked\n     * @return {boolean}\n     */\n    isFunction(f) {\n      return Function.prototype.isFunction.call(f);\n    },\n\n    /**\n     * proxies a function with scope and optional arguments<br><br>\n     * @example <caption>eg. usage</caption>\n     * var a = 1;\n     * var b = new Date();\n     * var c = function() {};\n     *\n     * var scope = {\n       *   prop1: 2.53,\n       *   prop2: 'foo';\n       * };\n     *\n     * var f = function(a, b, c) {\n       *   console.log(this.prop1, a, b, c);\n       * }\n     *\n     * f(a, b, c);\n     * // it logs\n     * undefined, 1, Date, function()\n     *\n     * var pf = f.proxy(scope);\n     * pf(a, b, c);\n     * // it logs\n     * 2.53, 1, Date, function()\n     *\n     * pf = f.proxy(scope, 2, null);\n     * pf(a, b, c);\n     * // it logs\n     * 2.53, 2, null, function()\n     * @memberOf function\n     * @method proxy\n     * @instance\n     * @param {function} f - the function to be proxed\n     * @param {object} scope - the scope object (will be `this` inside the function)\n     * @param {...object} args - pass one or more arguments to override the original handled arguments\n     * @return {function}\n     */\n    proxy(f, scope, ...args) {\n      return Function.prototype.proxy.call(f, scope, ...args);\n    },\n  },\n  prototype: {\n    isFunction() {\n      return _.isFunction(this);\n    },\n\n    proxy(scope, ...proxyArgs) {\n      const func = this;\n\n      return function (...args) {\n        return func.apply(scope, (proxyArgs.length >= 1 ? proxyArgs : args));\n      };\n    },\n  },\n};\n","import _ from 'lodash';\nimport _baseIteratee from 'lodash/_baseIteratee';\nimport _basePullAll from 'lodash/_basePullAll';\nimport _toFinite from 'lodash/toFinite';\n\n/**\n * @namespace lodash\n * @description all the mixins added to _\n */\nexport default {\n  /**\n   * checks if a string is a percentage value<br><br>\n   * @example <caption>eg. usage</caption>\n   * var s = '23.97%';\n   *\n   * console.log(_.isPercentage(s)); // true\n   *\n   * console.log(_.isPercentage('50%')); // true\n   *\n   * console.log(_.isPercentage(10)); // false\n   * @memberOf lodash\n   * @method isPercentage\n   * @instance\n   * @param {string} s - the string\n   * @return {boolean}\n   */\n  isPercentage(s) {\n    return String.isString(s) && String.isPercentage(s);\n  },\n\n  /**\n   * parses float value in a percentage string<br><br>\n   * @example <caption>eg. usage</caption>\n   * var p = '50.5%';\n   *\n   * console.log(_.parsePercentage(p)); // 50.5\n   *\n   * console.log(_.parsePercentage('100%')); // 100\n   *\n   * console.log(_.parsePercentage(25.3)); // null\n   * @memberOf lodash\n   * @method parsePercentage\n   * @instance\n   * @param {string} s - the percentage string\n   * @return {null|number}\n   */\n  parsePercentage(s) {\n    if (String.isString(s) && String.isPercentage(s)) {\n      return String.parsePercentage(s);\n    }\n\n    return null;\n  },\n\n  /**\n   * filters a collection with a list of values specified for one property<br><br>\n   * @example <caption>eg. usage</caption>\n   * var collection = [{\n   *   id: 1, status: 'active'\n   * }, {\n   *   id: 2, status: 'disabled'\n   * }, {\n   *   id: 3, status: 'unactive'\n   * }];\n   *\n   * var allowedValues = ['active', 'unactive'];\n   *\n   * console.log(_.filterByValues(collection, 'status', allowedValues);\n   * // logs [{id: 1, status: 'active'}, {id: 3, status: 'unactive'}]\n   * @memberOf lodash\n   * @method filterByValues\n   * @instance\n   * @param {Array|object} collection - the collection to filter\n   * @param {string} key - the key to be used as property name\n   * @param {Array} values - the list of values to check\n   * @return {Array}\n   */\n  filterByValues(collection, key, values) {\n    return _.filter(collection, (o) => {\n      return values.contains(o.path(key));\n    });\n  },\n\n  /**\n   * deeply maps a recursive tree structure with (same structure) childrenPropName or 'children' property<br><br>\n   * @example <caption>eg. usage</caption>\n   * var tree = [{\n   *   id: '1', status: 'enabled', items: [{\n   *     id: '1.1', status: 'enabled', items: [{\n   *       id: '1.1.1', status: 'enabled'\n   *     }, {\n   *       id: '1.1.2', status: 'disabled'\n   *     }]\n   *   }, {\n   *     id: '1.2', status: 'disabled'\n   *   }]\n   * }];\n   *\n   * console.log(_.deepMap(tree, 'items', function(treeItem) {\n   *   return {\n   *     id: treeItem.id,\n   *     status: treeItem.status,\n   *     combo: treeItem.id + '-' + treeItem.status\n   *   };\n   * });\n   *\n   * // logs [{\n   *  id: '1', status: 'enabled', combo: '1-enabled' items: [{\n   *    id: '1.1', status: 'enabled', combo: '1.1-enabled', items: [{\n   *      id: '1.1.1', status: 'enabled', combo: '1.1.1-enabled'\n   *    }, {\n   *      id: '1.1.2', status: 'disabled', combo: '1.1.2-disabled'\n   *    }]\n   *  }, {\n   *    id: '1.2', status: 'disabled', combo: '1.2-disabled'\n   *  }]\n   * }]\n   * @memberOf lodash\n   * @method deepMap\n   * @instance\n   * @param {Array|object} collection - the collection to use for the deep mapping\n   * @param {string} [childrenPropName='children'] - the property name to use for children collection\n   * @param {function} mapCallback - the item mapping callback\n   */\n  deepMap(collection, childrenPropName = 'children', mapCallback) {\n    return _.map(collection, (item) => {\n      if (!!item[childrenPropName]) {\n        if (_.isArray(item[childrenPropName])) {\n          item[childrenPropName] = _.deepMap(item[childrenPropName], childrenPropName, mapCallback);\n        }\n      }\n\n      return mapCallback(item);\n    });\n  },\n\n  /**\n   * deeply searches in a recursive tree structure with (same structure) childrenPropName or 'children' property<br>\n   * looking for an item with the propName === propValue<br><br>\n   * @example <caption>eg. usage</caption>\n   * var tree = [{\n   *   id: '1', status: 'enabled', items: [{\n   *     id: '1.1', status: 'enabled', items: [{\n   *       id: '1.1.1', status: 'enabled'\n   *     }, {\n   *       id: '1.1.2', status: 'disabled'\n   *     }]\n   *   }, {\n   *     id: '1.2', status: 'disabled'\n   *   }]\n   *  }, {\n   *   id: '2', status: 'disabled', items: [{\n   *     id: '2.1', status: 'enabled'\n   *   }, {\n   *     id: '2.2', status: 'enabled'\n   *   }]\n   *  }, {\n   *   id: '3', status: 'enabled', items: [{\n   *     id: '3.1', status: 'disabled'\n   *   }, {\n   *     id: '3.2', status: 'enabled'\n   *   }, {\n   *     id: '3.3', status: 'enabled'\n   *   }]\n   * }];\n   *\n   * console.log(_.deepFindBy(tree, 'id', '1.1.1', 'items');\n   * // logs {\n   *   id: '1.1.1', status: 'enabled'\n   * }\n   *\n   * console.log(_.deepFindBy(tree, function(item) {\n   *   return item.id === '3.2'\n   * }, null, 'items');\n   * // logs {\n   *   id: '3.2', status: 'enabled'\n   * }\n   * @memberOf lodash\n   * @method deepFindBy\n   * @instance\n   * @param {Array|object} collection - the collection\n   * @param {string|function} propName - the property name or the predicate function to invoke (item will be passed as parameter to the predicate)\n   * @param {*} propValue - the property value\n   * @param {string} [childrenPropName='children'] - the children prop name\n   * @return {*}\n   */\n  deepFindBy(collection, propName, propValue, childrenPropName = 'children') {\n    let found = null;\n\n    collection.each((item) => {\n      if (!found) {\n        if (_.isFunction(propName)) {\n          /**\n           * use propName as predicate\n           */\n          found = propName(item);\n        } else if (item[propName] === propValue) {\n          found = item;\n        } else if (!!item[childrenPropName]) {\n          if (_.isArray(item[childrenPropName])) {\n            found = _.deepFindBy(item[childrenPropName], propName, propValue, childrenPropName);\n          }\n        }\n      }\n    });\n\n    return found;\n  },\n\n  /**\n   * deeply sorts a recursive tree structure with (same structure) childrenPropName or 'children' property<br><br>\n   * @example <caption>eg. usage</caption>\n   * var tree = [{\n   *   id: '1', status: 'enabled', items: [{\n   *     id: '1.1', status: 'enabled', items: [{\n   *       id: '1.1.1', status: 'enabled'\n   *     }, {\n   *       id: '1.1.2', status: 'disabled'\n   *     }]\n   *   }, {\n   *     id: '1.2', status: 'disabled'\n   *   }]\n   *  }, {\n   *   id: '2', status: 'disabled', items: [{\n   *     id: '2.1', status: 'enabled'\n   *   }, {\n   *     id: '2.2', status: 'enabled'\n   *   }]\n   *  }, {\n   *   id: '3', status: 'enabled', items: [{\n   *     id: '3.1', status: 'disabled'\n   *   }, {\n   *     id: '3.2', status: 'enabled'\n   *   }, {\n   *     id: '3.3', status: 'enabled'\n   *   }]\n   * }];\n   *\n   * console.log(_.deepOrderBy(tree, ['id'], ['desc'], 'items');\n   * // logs [{\n   *   id: '3', status: 'enabled', items: [{\n   *     id: '3.3', status: 'enabled'\n   *   }, {\n   *     id: '3.2', status: 'disabled'\n   *   }, {\n   *     id: '3.1', status: 'enabled'\n   *   }]\n   *  }, {\n   *   id: '2', status: 'disabled', items: [{\n   *     id: '2.2', status: 'enabled'\n   *   }, {\n   *     id: '2.1', status: 'enabled'\n   *   }]\n   *  }, {\n   *   id: '1', status: 'enabled', items: [{\n   *     id: '1.2', status: 'disabled'\n   *   }, {\n   *     id: '1.1', status: 'enabled', items: [{\n   *       id: '1.1.2', status: 'enabled'\n   *     }, {\n   *       id: '1.1.1', status: 'disabled'\n   *     }]\n   *   }]\n   * }]\n   * @memberOf lodash\n   * @method deepOrderBy\n   * @instance\n   * @param {Array|object} collection - the collection\n   * @param {Array|string} propNames - the list of property names to sort\n   * @param {Array|string} propDirections - the list of order by direction to use with propNames\n   * @param {string} [childrenPropName='children'] - the children prop name\n   * @return {Array|object}\n   */\n  deepOrderBy(collection, propNames, propDirections, childrenPropName = 'children') {\n    if (_.isString(propNames)) {\n      propNames = [propNames];\n    }\n\n    if (!!propDirections) {\n      if (_.isString(propDirections)) {\n        propDirections = [propDirections];\n      }\n    } else {\n      propDirections = propNames.map(() => {\n        return 'asc';\n      });\n    }\n\n    collection = _.orderBy(collection, propNames, propDirections);\n\n    collection.each((item) => {\n      if (!!item[childrenPropName]) {\n        if (_.isArray(item[childrenPropName])) {\n          item[childrenPropName] = _.deepOrderBy(item[childrenPropName], propNames, propDirections, childrenPropName);\n        }\n      }\n    });\n\n    return collection;\n  },\n\n  /**\n   * @todo document method\n   * @memberOf lodash\n   * @method pullAllByComparator\n   * @instance\n   * @param {collection} collection\n   * @param {array} values\n   * @param {function} comparator\n   * @param {function} iteratee\n   * @return {array}\n   */\n  pullAllByComparator(collection, values, comparator, iteratee) {\n    return (collection && collection.length && values && values.length)\n      ? _basePullAll(collection, values, _baseIteratee(iteratee, 2), comparator)\n      : collection;\n  },\n\n  /**\n   * a reverse implementation of _.times by lodash<br><br>\n   * @example <caption>eg. usage</caption>\n   * _.timesReverse(5, function(i) {\n   *   console.log(i);\n   * });\n   *\n   * // logs\n   * 5\n   * 4\n   * 3\n   * 2\n   * 1\n   * @memberOf lodash\n   * @method timesReverse\n   * @instance\n   * @param {number} times - num of times to invoke iteratee\n   * @param {function} iteratee - the iteratee function to invoke<br>\n   * the iteratee will be invoked passing che cycle indicator as i<br>\n   * so the iteratee has to be something like this<br>\n   * <pre>\n   * function(i) {}\n   * </pre>\n   */\n  timesReverse(times, iteratee) {\n    let index = times;\n\n    while (--index >= 0) {\n      _.isFunction(iteratee) && iteratee(index);\n    }\n  },\n\n  /**\n   * an implementation of _.times by lodash, where you can specify start & end numbers<br><br>\n   * @example <caption>eg. usage</caption>\n   * _.timesRange(5, 10, function(i) {\n   *   console.log(i);\n   * });\n   *\n   * // logs\n   * 5\n   * 6\n   * 7\n   * 8\n   * 9\n   * 10\n   * @example <caption>or</caption>\n   * _.timesRange(5, 10, function(i) {\n   *   console.log(i);\n   * }, true);\n   *\n   * // logs\n   * 10\n   * 9\n   * 8\n   * 7\n   * 6\n   * 5\n   * @memberOf lodash\n   * @method timesRange\n   * @instance\n   * @param {number} start - start num of times to invoke iteratee\n   * @param {number} end - end num of times to invoke iteratee\n   * @param {function} iteratee - the iteratee function to invoke<br>\n   * the iteratee will be invoked passing che cycle indicator as i<br>\n   * so the iteratee has to be something like this<br>\n   * <pre>\n   * function(i) {}\n   * </pre>\n   * @param {boolean} reverse - specify if you want reverse cycle\n   */\n  timesRange(start, end, iteratee = null, reverse = false) {\n    if (_.isFunction(iteratee)) {\n      // Ensure the sign of `-0` is preserved.\n      start = _toFinite(start);\n\n      if (!end) {\n        end = start;\n        start = 0;\n      } else {\n        end = _toFinite(end);\n      }\n\n      let index = (reverse ? end : start);\n\n      while ((reverse ? index-- >= start : index++ <= end)) {\n        iteratee(index + (reverse ? 1 : -1));\n      }\n    }\n  },\n\n  objectToPaths(obj, leavesOnly = false, parentKey = null) {\n    let result;\n\n    if (_.isArray(obj)) {\n      let idx = 0;\n      result = _.flatMap(obj, (item) => {\n        return _.objectToPaths(item, leavesOnly, (parentKey || '') + '[' + (idx++) + ']');\n      });\n    } else if (_.isPlainObject(obj)) {\n      result = _.flatMap(_.keys(obj), (key) => {\n        return _.map(_.objectToPaths(obj[key], leavesOnly, key), (subkey) => {\n          return (parentKey ? parentKey + '.' : '') + subkey;\n        });\n      });\n    } else {\n      result = [];\n    }\n\n    return _.filter(_.sortBy(_.concat(result, parentKey || [])), (path) => {\n      const value = _.get(obj, path);\n      return !!leavesOnly ? !_.isArray(value) && !_.isPlainObject(value) && !_.isFunction(value) : true;\n    });\n  },\n  keyValueToHash(keyValueCollection, keyField = 'key', valueField = 'value') {\n    return _.transform(keyValueCollection, (result, keyValueItem) => {\n      result[keyValueItem[keyField]] = keyValueItem[valueField];\n    }, {});\n  },\n  objectToHash(obj) {\n    return _.transform(_.objectToPaths(obj, true), (result, path) => {\n      result[path] = _.get(obj, path);\n    }, {});\n  },\n  hashToObject(hash) {\n    return _.transform(hash, (result, value, key) => {\n      _.set(result, key, value);\n    }, {});\n  },\n  cleanObject(o) {\n    return _.omitBy(o, _.isFunction);\n  },\n  mergeInc(...args) {\n    return _.mergeWith.apply(this, args, (accValue, newValue) => {\n      return accValue + newValue;\n    });\n  },\n  sum(a, sumProp, startValue) {\n    return _.reduce(a, (acc, item) => {\n      return acc + item[sumProp];\n    }, startValue || 0);\n  },\n};\n","import _ from 'lodash';\n\n/**\n * @namespace number\n * @description the JS native Number class\n */\nexport default {\n  native: {\n    /**\n     * check if something is a number\n     * @example <caption>eg. usage</caption>\n     * var n = 1;\n     *\n     * console.log(Number.isNumber(n)); // true\n     *\n     * console.log(Number.isNumber(2)); // true\n     *\n     * console.log(Number.isNumber('')); // false\n     *\n     * console.log(Number.isNumber(null)); // false\n     * @memberOf number\n     * @method isNumber\n     * @instance\n     * @return {boolean}\n     */\n    isNumber(n) {\n      return Number.prototype.isNumber.call(n);\n    },\n\n    /**\n     * checks if a number is between a range\n     * @example <caption>eg. usage</caption>\n     * console.log((5).between(1, 10)); // true\n     *\n     * console.log((5).between(1, 4)); // false\n     * @memberOf number\n     * @method between\n     * @instance\n     * @param {number} n - the number\n     * @param {number} [from=Number.MIN_VALUE] - the from number\n     * @param {number} [to=Number.MAX_VALUE] - the to number\n     * @return {*|boolean}\n     */\n    isBetween(n, from = Number.MIN_VALUE, to = Number.MAX_VALUE) {\n      if (!Number.isNumber(n)) {\n        return false;\n      }\n\n      return Number.prototype.isBetween.call(n, from, to);\n    },\n\n    /**\n     * parse a number value, returns null if parsing failes\n     * @example <caption>eg. usage</caption>\n     * console.log(Number.parse(\"1\")); // 1\n     *\n     * console.log(Number.parse(\"1,25\")); // 1.25\n     *\n     * console.log(Number.parse({})); // null\n     * @memberOf number\n     * @method parse\n     * @instance\n     * @param {*} n - the value to be parsed\n     * @return {number|null}\n     */\n    parse(n) {\n      return _.parseInt(n);\n    },\n\n    /**\n     * repeats a function n times\n     * @example <caption>eg. usage</caption>\n     * (5).times(function(i) {\n     *   console.log(i);\n     * });\n     *\n     * // logs 1, 2, 3, 4, 5\n     * @example <caption>or</caption>\n     * (5).times(function(i) {\n     *   console.log(i);\n     * }, true);\n     *\n     * // logs 5, 4, 3, 2, 1\n     * @memberOf number\n     * @method times\n     * @instance\n     * @param {number} n - the number of times\n     * @param {function} iteratee - the iteratee function to invoke<br>\n     * the iteratee will be invoked passing the index as i<br>\n     * so the iteratee has to be something like this<br>\n     * <pre>\n     * function(i) {}\n     * </pre>\n     * @param {number} iteratee.i - the index\n     * @param {boolean} [reverse=false] - true if you want to do a times reverse cycle\n     */\n    times(n, iteratee, reverse = false) {\n      if (Number.isNumber(n) && Number.isInteger(n)) {\n        return Number.prototype.times.call(n, iteratee, reverse);\n      }\n\n      return n;\n    },\n\n    /**\n     * randomizes a number\n     * @example <caption>eg. usage</caption>\n     * console.log(Number.random(1, 5)); // a number between 1 and 5\n     *\n     * console.log(Number.random(1, 5, true)); // a number between 1.0 and 5.0\n     *\n     * console.log(Number.random()); // a number between Number.MIN_VALUE and Number.MAX_VALUE\n     * @memberOf number\n     * @method random\n     * @instance\n     * @param {number} [lower=Number.MIN_VALUE] - the lower number\n     * @param {number} [upper=Number.MAX_VALUE] - the upper number\n     * @param {boolean} [floating=false] - ask to return a floating number value\n     * @return {number}\n     */\n    random(lower = Number.MIN_VALUE, upper = Number.MAX_VALUE, floating = false) {\n      return _.random(lower, upper, floating);\n    },\n\n    /**\n     * converts a Romans Number String in a Decimal Number\n     * @example <caption>eg. usage</caption>\n     * console.log(Number.fromRoman('MCMLXXX')); // 1980\n     * @memberOf number\n     * @method fromRoman\n     * @instance\n     * @param {string} s - the roman number string\n     * @return {number}\n     */\n    fromRoman(s) {\n      let str = s;\n      let result = null;\n      // the result is now a number, not a string\n      const decimal = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n      const roman = ['M', 'CM', 'D', 'CD', 'C', 'XC', 'L', 'XL', 'X', 'IX', 'V', 'IV', 'I'];\n\n      decimal.length.times((i) => {\n        while (str.indexOf(roman[i]) === 0) {\n          if (!result) {\n            result = 0;\n          }\n\n          result += decimal[i];\n          str = str.replace(roman[i], '');\n        }\n      });\n\n      return result;\n    },\n\n    /**\n     * converts a number in a Roman Number String\n     * @example <caption>eg. usage</caption>\n     * console.log((1980).toRoman()); // 'MCMLXXX'\n     * @memberOf number\n     * @method toRoman\n     * @instance\n     * @param {number} n - the number\n     * @return {string}\n     */\n    toRoman(n) {\n      return Number.prototype.toRoman.call(n);\n    },\n\n    /**\n     * converts a number of bytes in a human readable file size string\n     * @example <caption>eg. usage</caption>\n     * console.log((1024).toFileSize()); // 1kb\n     * @memberOf number\n     * @method toFileSize\n     * @instance\n     * @param {number} n - the number\n     * @param {number} precision - the precision number\n     * @return {*}\n     */\n    toFileSize(n, precision = 0) {\n      return Number.prototype.toFileSize.call(n, precision);\n    },\n\n    /**\n     * absolutes a number\n     * @example <caption>eg. usage</caption>\n     * console.log((1).toAbsolute()); // 1\n     *\n     * console.log((1.56).toAbsolute()); // 1.56\n     *\n     * console.log((-1.56).toAbsolute()); // 1.56\n     * @memberOf number\n     * @method toAbsolute\n     * @instance\n     * @param {number} n - the number\n     * @return {number}\n     */\n    toAbsolute(n) {\n      return Number.prototype.toAbsolute.call(n);\n    },\n\n    /**\n     * converts a number to a integer/float string with symbol (currency, measure unit) support\n     * @example <caption>eg. usage</caption>\n     * console.log((1).toSymbolString()); // 1,00\n     *\n     * console.log((1).toSymbolString({decimals: 3}); // 1,000\n     *\n     * console.log((123456.789).toSymbolString({decimals: 2}); // 123,456.79\n     * console.log((123456.789).toSymbolString({sections: 4, decimals: 2}); // 12,3456.79\n     *\n     * console.log((123456.789).toSymbolString({symbol: 'kWh'}); // 12.3456,79 kWh\n     * console.log((123456.789).toSymbolString({symbol: '&euro;', symbolNumberSeparator: ''}); // 123.456,79&euro;\n     *\n     * console.log((123456.789).toSymbolString({sectionsDelimiter: '.', decimalsDelimiter: ','}); // 123.456,789\n     * @memberOf number\n     * @method toSymbolString\n     * @instance\n     * @param {number} n - the number\n     * @param {object} [options=false] - options to be used as parameters for conversion<br>\n     * @param {number} [options.sections=3] sections - section to divide the integer part of number in\n     * @param {string} [options.sectionsDelimiter=','] sectionsDelimiter - delimiter used to separe integer sections\n     * @param {number} [options.decimals=2] decimals - desired number of decimals\n     * @param {string} [options.decimalsDelimiter='.'] decimalsDelimiter - delimiter used to separe decimals from integer part of number\n     * @param {string} [options.symbol=''] symbol - currency symbol or measure unit to use (eg. '&euro;')\n     * @param {boolean} [options.symbolAppend=true] symbolAppend - if true the symbol will be appended to the number\n     * @param {string} [options.symbolNumberSeparator='&nbsp;'] symbolNumberSeparator - the separator that will be used to divide symbol from the number\n     * @return {string}\n     */\n    toSymbolString(n, {\n      sections = 3,\n      sectionsDelimiter = ',',\n      decimals = 2,\n      decimalsDelimiter = '.',\n      symbol = '',\n      symbolAppend = true,\n      symbolNumberSeparator = '&nbsp;',\n    } = false) {\n      if (Number.isNumber(n)) {\n        return Number.prototype.toSymbolString.call(n, {\n          sections,\n          sectionsDelimiter,\n          decimals,\n          decimalsDelimiter,\n          symbol,\n          symbolAppend,\n          symbolNumberSeparator,\n        });\n      }\n\n      return n;\n    },\n\n    /**\n     * formats a number to a currency string\n     * @example <caption>eg. usage</caption>\n     * console.log((1).toCurrency()); // 1,00 â‚¬\n     *\n     * console.log((1).toCurrency({decimals: 3}); // 1,000 â‚¬\n     *\n     * console.log((123456.789).toCurrency({decimals: 2}); // 123.456,79 â‚¬\n     *\n     * console.log((123456.789).toCurrency({sections: 4, decimals: 3}); // 12.3456,789 â‚¬\n     *\n     * console.log((123456.789).toCurrency({sections: 4, sectionsDelimiter: ',', decimals: 3, decimalsDelimiter: '.'}); // 12,3456.789 â‚¬\n     * @memberOf number\n     * @method toCurrency\n     * @instance\n     * @param {number} n - the number\n     * @param {object} [options=false] - options to be used as parameters for conversion<br>\n     * @param {number} [options.sections=3] sections - section to divide the integer part of number in\n     * @param {string} [options.sectionsDelimiter='.'] sectionsDelimiter - delimiter used to separe integer sections\n     * @param {number} [options.decimals=2] decimals - desired number of decimals\n     * @param {string} [options.decimalsDelimiter=','] decimalsDelimiter - delimiter used to separe decimals from integer part of number\n     * @param {string} [options.symbol=''] symbol - currency symbol or measure unit to use (eg. '&euro;')\n     * @param {boolean} [options.symbolAppend=true] symbolAppend - if true the symbol will be appended to the number\n     * @param {string} [options.symbolNumberSeparator='&nbsp;'] symbolNumberSeparator - the separator that will be used to divide symbol from the number\n     * @return {string}\n     */\n    toCurrency(n, {\n      sections = 3,\n      sectionsDelimiter = '.',\n      decimals = 2,\n      decimalsDelimiter = ',',\n      symbol = '&euro;',\n      symbolAppend = true,\n      symbolNumberSeparator = '',\n    } = false) {\n      if (Number.isNumber(n)) {\n        return Number.prototype.toCurrency.call(n, {\n          sections,\n          sectionsDelimiter,\n          decimals,\n          decimalsDelimiter,\n          symbol,\n          symbolAppend,\n          symbolNumberSeparator,\n        });\n      }\n\n      return n;\n    },\n\n    /**\n     * floors a value\n     * @example <caption>eg. usage</caption>\n     * console.log((5.076).floor()); // 4\n     *\n     * console.log((5.076).floor(2)); // 5.07\n     *\n     * console.log((5070).floor(-2)); // 5000\n     * @memberOf number\n     * @method floor\n     * @instance\n     * @param {number} n - the number\n     * @param {number} [precision=0] - the precision number\n     * @return {number}\n     */\n    floor(n, precision = 0) {\n      return Number.prototype.floor.call(n, precision);\n    },\n\n    /**\n     * rounds a value\n     * @example <caption>eg. usage</caption>\n     * console.log((5.007).round()); // 5\n     *\n     * console.log((5.007).round(2)); // 5.01\n     *\n     * console.log((5070).round(-2)); // 5100\n     * @memberOf number\n     * @method round\n     * @instance\n     * @param {number} n - the number\n     * @param {number} [precision=0] - the precision number\n     * @return {number}\n     */\n    round(n, precision = 0) {\n      if (Number.isNumber(n)) {\n        return Number.prototype.round.call(n, precision);\n      }\n      return n;\n    },\n\n    /**\n     * Keeps a value `v` between `min` and `max`.\n     *\n     * @class clip\n     * @constructor\n     * @param {Number}  v The value to be bounded.\n     * @param {Number}  min The minimum bound for the value.\n     * @param {Number}  max The maximum bound for value.\n     * @returns {Number} The bounded value.\n     */\n    /**\n     * crops a value between specified bounds\n     * @example <caption>eg. usage</caption>\n     * console.log(Number.crop(5, 1, 10)); // 5\n     *\n     * console.log(Number.crop(5, 2, 4)); // 4\n     *\n     * console.log(Number.crop(5, 2)); // 5\n     *\n     * console.log(Number.crop(5, 6)); // 6\n     *\n     * console.log(Number.crop('5')); // '5'\n     *\n     * console.log((5).crop(1, 10)); // 5\n     *\n     * console.log((5).crop(2, 4)); // 4\n     *\n     * console.log((5).crop(2)); // 5\n     *\n     * console.log((5).crop(6)); // 6\n     * @memberOf number\n     * @method round\n     * @instance\n     * @param {number} n - the number\n     * @param {number} [precision=0] - the precision number\n     * @return {number}\n     */\n    crop(n, min, max) {\n      if (Number.isNumber(n)) {\n        return Number.prototype.crop.call(n, min, max);\n      }\n\n      return n;\n    },\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from start up to, but not including, end. A step of -1 is used if a negative start is specified without an end or step. If end is not specified, it's set to start with start then set to 0.\n     * @example <caption>eg. usage</caption>\n     * console.log(Array.range(4));\n     * // [0, 1, 2, 3]\n     *\n     * console.log(Array.range(-4));\n     * // [0, -1, -2, -3]\n     *\n     * console.log(Array.range(1, 5));\n     * // [1, 2, 3, 4]\n     *\n     * console.log(Array.range(0, 20, 5));\n     * // [0, 5, 10, 15]\n     *\n     * console.log(Array.range(0, -4, -1));\n     * // [0, -1, -2, -3]\n     *\n     * console.log(Array.range(1, 4, 0));\n     * // [1, 1, 1]\n     *\n     * console.log(Array.range(0);\n     * // []\n     * @example <caption>eg. usage (reverse)</caption>\n     * console.log(Array.rangeRight(4));\n     * // [3, 2, 1, 0]\n     *\n     * console.log(Array.rangeRight(-4));\n     * // [-3, -2, -1, 0]\n     *\n     * console.log(Array.rangeRight(1, 5));\n     * // [4, 3, 2, 1]\n     *\n     * console.log(Array.rangeRight(0, 20, 5));\n     * // [15, 10, 5, 0]\n     *\n     * console.log(Array.rangeRight(0, -4, -1));\n     * // [-3, -2, -1, 0]\n     *\n     * console.log(Array.rangeRight(1, 4, 0));\n     * // [1, 1, 1]\n     *\n     * console.log(Array.rangeRight(0));\n     * // []\n     * @memberOf number\n     * @method range\n     * @instance\n     * @param {number} [start=0] - the start of the range\n     * @param {number} end - the end of the range\n     * @param {boolean} reverse - true, if ou want a reverse range\n     * @param {number} [step=1] - the value to increment or decrement by\n     * @return {array}\n     */\n    range(start, end = null, reverse = false, step = 1) {\n      if (Number.isNumber(start)) {\n        return Number.prototype.range.call(start, end, reverse, step);\n      }\n\n      return start;\n    },\n\n    /**\n     * wraps an angle value (in degrees) between 0 and 359.\n     *\n     * @memberOf number\n     * @method degreeWrap\n     * @instance\n     * @param {Number}  angle The angle in degrees.\n     * @returns {Number} The wrapped value.\n     */\n    degreeWrap(a) {\n      if (Number.isNumber(a)) {\n        return Number.prototype.degreeWrap.call(a);\n      }\n\n      return a;\n    },\n\n    /**\n     * Returns the minimum distance from angle `a1` to `a2` (both in degrees). The\n     * result is kept between 0 and 359.\n     *\n     * @memberOf number\n     * @method degreeDiff\n     * @instance\n     * @param {Number}  a1 The initial angle in degrees.\n     * @param {Number}  a2 The final angle in degrees.\n     * @returns {Number} The angle distance value.\n     */\n    degreeDiff(a1, a2) {\n      if (Number.isNumber(a1) && Number.isNumber(a2)) {\n        return Number.prototype.degreeDiff.call(a1, a2);\n      }\n\n      return 0;\n    },\n\n    /**\n     * Returns the direction that represents the minimum distance from angle `a1`\n     * to `a2` (in degrees). The result is `-1`, `1`, or `0` if equal.\n     *\n     * @memberOf number\n     * @method degreeDir\n     * @instance\n     * @param {Number}   a1 The initial angle in degrees.\n     * @param {Number}   a2 The final angle in degrees.\n     * @returns {Integer} A direction -1, 1 or 0.\n     */\n    degreeDir(a1, a2) {\n      if (Number.isNumber(a1) && Number.isNumber(a2)) {\n        return Number.prototype.degreeDir.call(a1, a2);\n      }\n\n      return 0;\n    },\n  },\n  prototype: {\n    isNumber() {\n      return _.isNumber(this);\n    },\n\n    isBetween(from = Number.MIN_VALUE, to = Number.MAX_VALUE) {\n      return from <= this && this <= to;\n    },\n\n    times(iteratee, reverse = false) {\n      return (!!reverse) ? _.timesReverse(this, iteratee) : _.times(this, iteratee);\n    },\n\n    toRoman() {\n      let num = this;\n      let result = '';\n      const decimal = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n      const roman = ['M', 'CM', 'D', 'CD', 'C', 'XC', 'L', 'XL', 'X', 'IX', 'V', 'IV', 'I'];\n\n      _.times(decimal.length, (i) => {\n        while (num % decimal[i] < num) {\n          result += roman[i];\n          num -= decimal[i];\n        }\n      });\n\n      return result;\n    },\n\n    toFileSize(precision = 0) {\n      let fileSizeString = '0 B';\n\n      if (!!this) {\n        const sizes = ['b', 'kb', 'mb', 'gb', 'tb', 'pb', 'eb', 'zb', 'yb'];\n        const i = Math.floor(Math.log(this) / Math.log(1024));\n        fileSizeString = parseFloat((this / Math.pow(1024, i)).toFixed(precision)) + sizes[i];\n      }\n\n      return fileSizeString;\n    },\n\n    toAbsolute() {\n      return Math.abs(this);\n    },\n\n    toSymbolString({\n      sections = 3,\n      sectionsDelimiter = ',',\n      decimals = 2,\n      decimalsDelimiter = '.',\n      symbol = '',\n      symbolAppend = true,\n      symbolNumberSeparator = '&nbsp;',\n    } = false) {\n      const prepend = (!symbolAppend && !!symbol ? symbol + symbolNumberSeparator : '');\n      const append = (!!symbolAppend && !!symbol ? symbolNumberSeparator + symbol : '');\n      const re = '\\\\d(?=(\\\\d{' + (sections || 3) + '})+' + (decimals > 0 ? '\\\\D' : '$') + ')';\n\n      return prepend + this.toFixed(decimals).replace('.', decimalsDelimiter).replace(new RegExp(re, 'g'), '$&' + sectionsDelimiter) + append;\n    },\n\n    toCurrency({\n      sections = 3,\n      sectionsDelimiter = '.',\n      decimals = 2,\n      decimalsDelimiter = ',',\n      symbol = '&euro;',\n      symbolAppend = true,\n      symbolNumberSeparator = '',\n    } = false) {\n      return this.toSymbolString({\n        sections,\n        sectionsDelimiter,\n        decimals,\n        decimalsDelimiter,\n        symbol,\n        symbolAppend,\n        symbolNumberSeparator,\n      });\n    },\n\n    floor(precision = 0) {\n      return _.floor(this, precision);\n    },\n\n    round(precision = 0) {\n      return _.round(this, precision);\n    },\n\n    crop(min = Number.MIN_VALUE, max = Number.MAX_VALUE) {\n      return Math.max(Math.min(this, max), min);\n    },\n\n    range(end = null, reverse = false, step = 1) {\n      const rangeStart = Number.isNumber(end) ? this : 0;\n      const rangeEnd = Number.isNumber(end) ? end : this;\n      const method = reverse ? 'rangeRight' : 'range';\n\n      return _[method](rangeStart, rangeEnd, step);\n    },\n\n    degreeWrap(min = 0, max = 360) {\n      return ((this < min) ? max : 0) + this % max;\n    },\n\n    degreeDiff(a, min = 0, max = 360) {\n      const ang1 = Number.degreeWrap(this, min, max);\n      const ang2 = Number.degreeWrap(a, min, max);\n\n      let diff = ang2 - ang1;\n\n      if (diff < min) {\n        diff += max;\n      }\n\n      if (diff > max / 2) {\n        diff = max - diff;\n      }\n\n      return diff;\n    },\n\n    degreeDir(a, min = 0, max = 360) {\n      const ang1 = Number.degreeWrap(this, min, max);\n      const ang2 = Number.degreeWrap(a, min, max);\n\n      if (ang1 === ang2) {\n        return 0;\n      }\n\n      const diff = Number.degreeDiff(ang1, ang2, min, max);\n\n      if (diff > max / 2) {\n        return -1;\n      }\n\n      return 1;\n    },\n  },\n};\n","import _ from 'lodash';\n\n/**\n * @namespace object\n * @description the JS native Object class\n */\nexport default {\n  native: {\n    /**\n     * isObject<br><br>\n     * @example <caption>eg. usage</caption>\n     * var o = {\n     *   prop1: 1,\n     *   prop2: 'a',\n     * };\n     *\n     * console.log(Object.isObject(o)); // true\n     *\n     * console.log(Object.isObject(2)); // true\n     *\n     * console.log(Object.isObject('2')); // true\n     *\n     * console.log(Object.isObject(null)); // false\n     * @memberOf object\n     * @method isObject\n     * @instance\n     * @param {object} o - the object\n     * @return {boolean}\n     */\n    isObject(o) {\n      return Object.prototype.isObject.call(o);\n    },\n\n    /**\n     * deep merges a variable list of objects inside this object instance or a new object (useful to implements defaults/options/settings pattern or set multiple properties at the same time or what you want)<br><br>\n     * @example <caption>eg. usage</caption>\n     * var o = {\n     *   prop1: 1,\n     *   prop2: 'a',\n     * };\n     *\n     * o.inherit({\n     *   prop1: 2,\n     *   prop3: new Date(),\n     * }, {\n     *   prop4: 7.52,\n     * });\n     *\n     * console.log(o); // o = {prop1: 2, prop2: 'a', prop3: Date, prop4: 7.52}\n     * @example <caption>or</caption>\n     * var o = {\n     *   prop1: 1,\n     *   prop2: 'a',\n     * };\n     *\n     * var p = o.inherit(true, {\n     *   prop1: 2,\n     *   prop3: new Date(),\n     * }, {\n     *   prop4: 7.52,\n     * });\n     *\n     * console.log(o); // o = {prop1: 1, prop2: 'a'}\n     *\n     * console.log(p); // p = {prop1: 2, prop2: 'a', prop3: Date, prop4: 7.52}\n     * @memberOf object\n     * @method inherit\n     * @instance\n     * @param {object} o - the object to extend\n     * @param {boolean} [createNew] - specifies to create a new object to merge\n     * @param {...object} args - the list of objects to merge\n     * @return {object}\n     */\n    inherit(o, ...args) {\n      return Object.prototype.inherit.call(o, ...args);\n    },\n\n    /**\n     * returns a new object that omits the specified properties<br><br>\n     * @example <caption>eg. usage</caption>\n     * var o = {\n     *   prop1: 1,\n     *   prop2: 'a',\n     * };\n     *\n     * o.inherit({\n     *   prop1: 2,\n     *   prop3: new Date(),\n     * }, {\n     *   prop4: 7.52,\n     * });\n     *\n     * console.log(o); // o = {prop1: 2, prop2: 'a', prop3: Date, prop4: 7.52}\n     *\n     * console.log(o.omit('prop1')); // {prop2: 'a', prop3: Date, prop4: 7.52}\n     *\n     * console.log(o.omit('prop1', 'prop2')); // {prop3: Date, prop4: 7.52}\n     *\n     * console.log(o.omit(['prop1', 'prop2'])); // {prop3: Date, prop4: 7.52}\n     *\n     * console.log(o.omit(['prop1'], ['prop2'])); // {prop3: Date, prop4: 7.52}\n     *\n     * console.log(o); // o = {prop1: 2, prop2: 'a', prop3: Date, prop4: 7.52}\n     * @memberOf object\n     * @method omit\n     * @instance\n     * @param {object} o - the object\n     * @param {...object} args - the list of properties to omit\n     * @return {object}\n     */\n    omit(o, ...args) {\n      return Object.prototype.omit.call(o, ...args);\n    },\n\n    /**\n     * returns a new object that picks only the specified properties<br><br>\n     * @example <caption>eg. usage</caption>\n     * var o = {\n     *   prop1: 1,\n     *   prop2: 'a',\n     * };\n     *\n     * o.inherit({\n     *   prop1: 2,\n     *   prop3: new Date(),\n     * }, {\n     *   prop4: 7.52,\n     * });\n     *\n     * console.log(o); // o = {prop1: 2, prop2: 'a', prop3: Date, prop4: 7.52}\n     *\n     * console.log(o.pick('prop1')); // {prop1: 2}\n     *\n     * console.log(o.pick('prop1', 'prop2')); // {prop1: 2, prop2: 'a'}\n     *\n     * console.log(o.pick(['prop1', 'prop2'])); // {prop1: 2, prop2: 'a'}\n     *\n     * console.log(o.pick(['prop1'], ['prop2'])); // {prop1: 2, prop2: 'a'}\n     *\n     * console.log(o); // o = {prop1: 2, prop2: 'a', prop3: Date, prop4: 7.52}\n     * @memberOf object\n     * @method pick\n     * @instance\n     * @param {object} o - the object\n     * @param {...object} args - the list of properties to omit\n     * @return {*}\n     */\n    pick(o, ...args) {\n      return Object.prototype.pick.call(o, ...args);\n    },\n\n    /**\n     * deeply clones an object in a new object<br><br>\n     * @example <caption>eg. usage</caption>\n     * var o = {\n     *   prop1: 1,\n     *   prop2: 'a',\n     * };\n     *\n     * var p = o.clone();\n     *\n     * console.log(o == p); // true\n     *\n     * console.log(o === p); // false\n     * @memberOf object\n     * @method clone\n     * @instance\n     * @param {object} o - the object\n     * @return {object}\n     */\n    clone(o) {\n      return Object.prototype.clone.call(o);\n    },\n\n    /**\n     * returns the value at the specified path of the object, with a default value<br><br>\n     * @example <caption>eg. usage</caption>\n     * var o = {\n     *   prop1: 1,\n     *   prop2: 'a',\n     *   prop3: {\n     *     prop31: 2.52,\n     *     prop32: 'b',\n     *   },\n     *   prop4: new Date(),\n     * };\n     *\n     * console.log(o.path('prop1')); // 1\n     *\n     * console.log(o.path('prop3.prop31')); // 2.52\n     *\n     * console.log(o.path('prop3.prop34')); // null\n     *\n     * console.log(o.path('prop3.prop34', 'c')); // c\n     * @example <caption>you can also use array paths</caption>\n     * var o = {\n     *   prop1: 1,\n     *   prop2: 'a',\n     *   prop3: {\n     *     prop31: 2.52,\n     *     prop32: [{\n     *       propO1: 'b',\n     *     }, {\n     *       propO1: 'c',\n     *     }],\n     *   },\n     *   prop4: new Date(),\n     * };\n     *\n     * console.log(o.path('prop3.prop32[0].propO1')); // 'b'\n     *\n     * console.log(o.path('prop3.prop32[1]')); // {propO1: 'c'}\n     *\n     * console.log(o.path('prop3.prop31[2]')); // null\n     *\n     * console.log(o.path('prop3.prop31[2]', {})); // {}\n     * @memberOf object\n     * @method path\n     * @instance\n     * @param {object} o - the object\n     * @param {string} path - the path to search inside the object\n     * @param {object} [def=null] - the default value to return if path is not found\n     * @return {*}\n     */\n    path(o, path, def = null) {\n      return Object.prototype.path.call(o, path, def);\n    },\n\n    /**\n     * executes function for every property in the object<br><br>\n     * @example <caption>eg. usage</caption>\n     * var o = {\n     *   prop1: 1,\n     *   prop2: 'a',\n     *   prop3: 'b',\n     *   prop4: new Date(),\n     * };\n     *\n     * o.each(function(value, key) {\n     *   console.log(key, value);\n     * });\n     *\n     * // it logs\n     * 'prop1', 1\n     * 'prop2', 'a'\n     * 'prop3', 'b'\n     * 'prop4', Date\n     * @memberOf object\n     * @method each\n     * @instance\n     * @param {object} o - the object\n     * @param {function} iteratee - the iteratee callback will be invoked with the following parameters<br>\n     * so your callback has to be something like this<br><br>\n     * <pre>\n     * function iteratee(value, key) {}\n     * </pre>\n     * @param {any} iteratee.value - the property value of the object\n     * @param {string} iteratee.key - the property key of the object\n     * @return {object} to make chainable the method\n     */\n    each(o, iteratee) {\n      return Object.prototype.each.call(o, iteratee);\n    },\n  },\n  prototype: {\n    isObject() {\n      return _.isPlainObject(this);\n    },\n\n    inherit(...args) {\n      const createNew = _.isBoolean(args[0]) ? args[0] : false;\n      let newArgs = args;\n\n      if (!!createNew) {\n        newArgs = Array.prototype.slice.call(newArgs, 1);\n      }\n\n      function safeInherit(scope) {\n        Array.prototype.unshift.call(newArgs, scope);\n\n        if (!!createNew) {\n          Array.prototype.unshift.call(newArgs, {});\n        }\n\n        return _.merge.apply(scope, newArgs);\n      }\n\n      return safeInherit(this);\n    },\n\n    omit(...args) {\n      return _.omit(this, ...args);\n    },\n\n    pick(...args) {\n      return _.pick(this, ...args);\n    },\n\n    clone() {\n      return _.cloneDeep(this);\n    },\n\n    path(path, def = null) {\n      if (typeof this === 'object' && this instanceof Object) {\n        return _.get(this, path, def);\n      }\n\n      return def;\n    },\n\n    each(iteratee) {\n      return _.each(this, iteratee);\n    },\n  },\n};\n","import _ from 'lodash';\n\n/**\n * @namespace string\n * @description the JS native String class\n */\nexport default {\n  native: {\n    /**\n     * checks if something is a string\n     * @example <caption>eg. usage</caption>\n     * var s = 'foo';\n     *\n     * console.log(String.isString(s)); // true\n     *\n     * console.log(String.isString(2)); // false\n     *\n     * console.log(String.isString('')); // true\n     *\n     * console.log(String.isString(null)); // false\n     * @memberOf string\n     * @method isString\n     * @instance\n     * @param {string} s - the string to be checked\n     * @return {boolean}\n     */\n    isString(s) {\n      return String.prototype.isString.call(s);\n    },\n\n    /**\n     * checks if a string is a percentage string\n     * @example <caption>eg. usage</caption>\n     * console.log(String.isPercentage('50,25%')); // true\n     *\n     * console.log(String.isPercentage('50,25')); // false\n     *\n     * console.log(String.isPercentage(5)); // false\n     * @memberOf string\n     * @method parsePercentage\n     * @instance\n     * @param {string} s - the string to be checked\n     * @return {boolean}\n     */\n    isPercentage(s) {\n      return String.prototype.isPercentage.call(s);\n    },\n\n    /**\n     * checks if a string is a roman number string\n     * @example <caption>eg. usage</caption>\n     * console.log(String.isRoman('MCMLXXX')); // true\n     *\n     * console.log(String.isRoman('50,25')); // false\n     *\n     * console.log(String.isRoman(5)); // false\n     * @memberOf string\n     * @method isRoman\n     * @instance\n     * @param {string} s - the string to be checked\n     * @return {boolean}\n     */\n    isRoman(s) {\n      return String.prototype.isRoman.call(s);\n    },\n\n    /**\n     * checks if a string is an url string (URI)\n     * @example <caption>eg. usage</caption>\n     * console.log(String.isUrl('http://www.google.it')); // true\n     *\n     * console.log(String.isUrl('50,25')); // false\n     *\n     * console.log(String.isUrl(5)); // false\n     * @memberOf string\n     * @method isUrl\n     * @instance\n     * @param {string} s - the string to check\n     * @return {*|boolean}\n     */\n    isUrl(s) {\n      return String.prototype.isUrl.call(s);\n    },\n\n    /**\n     * checks if a string contains another string\n     * @example <caption>eg. usage</caption>\n     * console.log(String.contains('FlavorJS is tasty', 'JS is')); // true\n     *\n     * console.log(String.contains('FlavorJS is tasty', 'js is')); // false\n     *\n     * console.log(String.contains('FlavorJS is tasty', 'js is', true)); // true\n     *\n     * console.log(String.contains('flavorJS Is tasty', 'JS is', true)); // true\n     *\n     * console.log('FlavorJS is tasty'.contains('JS is')); // true\n     *\n     * console.log('FlavorJS is tasty'.contains('js is')); // false\n     *\n     * console.log('FlavorJS is tasty'.contains('js is', true)); // true\n     *\n     * console.log('flavorJS is tasty'.contains('JS is', true)); // true\n     * @memberOf string\n     * @method contains\n     * @instance\n     * @param {string} s - the string to be checked\n     * @param {string} value - the string value to check\n     * @param {boolean} [insensitive=false] - true if you want to do an insensitive check\n     * @return {boolean}\n     */\n    contains(s, value, insensitive = false) {\n      return String.prototype.contains.call(s, value, insensitive);\n    },\n\n    /**\n     * checks if a string starts with another string\n     * @example <caption>eg. usage</caption>\n     * console.log(String.startsWith('FlavorJS is tasty', 'Flavor')); // true\n     *\n     * console.log(String.startsWith('FlavorJS is tasty', 'flavor')); // false\n     *\n     * console.log(String.startsWith('FlavorJS is tasty', 'flavor', true)); // true\n     *\n     * console.log(String.startsWith('flavorJS is tasty', 'Flavor', true)); // true\n     *\n     * console.log('FlavorJS is tasty'.startsWith('Flavor')); // true\n     *\n     * console.log('FlavorJS is tasty'.startsWith('flavor')); // false\n     *\n     * console.log('FlavorJS is tasty'.startsWith('flavor', true)); // true\n     *\n     * console.log('flavorJS is tasty'.startsWith('Flavor', true)); // true\n     * @memberOf string\n     * @method startsWith\n     * @instance\n     * @param {string} s - the string to be checked\n     * @param {string} value - the value to check\n     * @param {boolean} [insensitive=false] - true if you want to do an insensitive check\n     * @return {boolean}\n     */\n    startsWith(s, value, insensitive = false) {\n      return String.prototype.contains.call(s, value, insensitive);\n    },\n\n    /**\n     * checks if a string ends with another string\n     * @example <caption>eg. usage</caption>\n     * console.log(String.endsWith('FlavorJS is tasty', 'Tasty')); // false\n     *\n     * console.log(String.endsWith('FlavorJS is tasty', 'tasty')); // true\n     *\n     * console.log(String.endsWith('FlavorJS is tasty', 'Tasty', true)); // true\n     *\n     * console.log(String.endsWith('FlavorJS is Tasty', 'tasty', true)); // true\n     *\n     * console.log(('FlavorJS is tasty').endsWith('Tasty')); // false\n     *\n     * console.log(('FlavorJS is tasty').endsWith('tasty')); // true\n     *\n     * console.log(('FlavorJS is tasty').endsWith('Tasty', true)); // true\n     *\n     * console.log(('flavorJS is Tasty').endsWith('tasty', true)); // true\n     * @memberOf string\n     * @method endsWith\n     * @instance\n     * @param {string} s - the string to be checked\n     * @param {string} value - the value to check\n     * @param {boolean} [insensitive=false] - true if you want to do an insensitive check\n     * @return {boolean}\n     */\n    endsWith(s, value, insensitive = false) {\n      return String.prototype.contains.call(s, value, insensitive);\n    },\n\n    /**\n     * stubs a GUID\n     * @example <caption>eg. usage</caption>\n     * console.log(String.guid()); // 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'\n     * @memberOf string\n     * @method guid\n     * @instance\n     */\n    guid() {\n      // Random GUID generator based on .toString(16);\n      return Math.random().toString(16).slice(2, 10) + '-' + Math.random().toString(16).slice(2, 6) + '-4' + Math.random().toString(16).slice(2, 5) + '-' + Math.random().toString(16).slice(2, 6) + '-' + Math.random().toString(16).slice(2, 14);\n\n      // Random GUID generator based on regex\n      // return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n      //   var r: Math.random()*16|0, v: c == 'x' ? r : (r&0x3|0x8);\n      //   return v.toString(16);\n      // });\n    },\n\n    /**\n     * camel cases a string\n     * @example <caption>eg. usage</caption>\n     * console.log(String.camelCase('Foo Bar')); // 'fooBar'\n     *\n     * console.log(String.camelCase('--foo-bar--')); // 'fooBar'\n     *\n     * console.log(String.camelCase('__FOO_BAR__')); // 'fooBar'\n     *\n     * console.log('Foo Bar'.camelCase()); // 'fooBar'\n     *\n     * console.log('--foo-bar--'.camelCase()); // 'fooBar'\n     *\n     * console.log('__FOO_BAR__'.camelCase()); // 'fooBar'\n     * @memberOf string\n     * @method camelCase\n     * @instance\n     * @param {string} s - the string\n     * @return {string}\n     */\n    camelCase(s) {\n      return String.prototype.camelCase.call(s);\n    },\n\n    /**\n     * capitalizes a string\n     * @example <caption>eg. usage</caption>\n     * console.log(String.capitalize('we\\'re happy to use flavorJS')); // Were Happy To Use Flavor JS\n     *\n     * console.log(String.capitalize('we\\'re happy to use flavorJS')); // We're happy to use flavorjs\n     *\n     * console.log(String.capitalize('flavorJS')); // Flavorjs\n     * @memberOf string\n     * @method capitalize\n     * @instance\n     * @param {string} s\n     * @return {string}\n     */\n    capitalize(s) {\n      return String.prototype.capitalize.call(s);\n    },\n\n    /**\n     * decodes an URI string\n     * @example <caption>eg. usage</caption>\n     * console.log(String.decodeURI('https%3A%2F%2Fflavorjs.io%2Fpage.html%3Fname%3Dblack%20mirror%26email%3Dusername%40example.com')); // 'https://flavorjs.io/page.html?name=black mirror&email=username@example.com'\n     *\n     * console.log(('https%3A%2F%2Fflavorjs.io%2Fpage.html%3Fname%3Dblack%20mirror%26email%3Dusername%40example.com').decodeURI()); // 'https://flavorjs.io/page.html?name=black mirror&email=username@example.com'\n     * @memberOf string\n     * @method decodeURI\n     * @instance\n     * @param {string} s - the URI string\n     * @return {string}\n     */\n    decodeURI(s) {\n      return String.prototype.decodeURI.call(s);\n    },\n\n    /**\n     * encodes an URI string\n     * @example <caption>eg. usage</caption>\n     * console.log(String.encodeURI('https://flavorjs.io/page.html?name=black mirror&email=username@example.com')); // 'https%3A%2F%2Fflavorjs.io%2Fpage.html%3Fname%3Dblack%20mirror%26email%3Dusername%40example.com'\n     *\n     * console.log(('https://flavorjs.io/page.html?name=black mirror&email=username@example.com').encodeURI()); // 'https%3A%2F%2Fflavorjs.io%2Fpage.html%3Fname%3Dblack%20mirror%26email%3Dusername%40example.com'\n     * @memberOf string\n     * @method encodeURI\n     * @instance\n     * @param {string} s - the URI string\n     * @return {string}\n     */\n    encodeURI(s) {\n      return String.prototype.encodeURI.call(s);\n    },\n\n    /**\n     * escapes an HTML code string\n     * @example <caption>eg. usage</caption>\n     * console.log(String.escapeHTML('<div>flavor & js = tasty</div>')); // '&lt;div&gt;flavor &amp; js = tasty&lt;/div&gt;'\n     *\n     * console.log(('<div>flavor & js = tasty</div>').escapeHTML()); // '&lt;div&gt;flavor &amp; js = tasty&lt;/div&gt;'\n     * @memberOf string\n     * @method escapeHTML\n     * @instance\n     * @param {string} s - the HTML code string\n     * @return {string}\n     */\n    escapeHTML(s) {\n      return String.prototype.escapeHTML.call(s);\n    },\n\n    /**\n     * extracts a domain from an URI string with level parameter\n     * @example <caption>eg. usage</caption>\n     * console.log(String.extractDomain('http://www.google.com')); // google.com\n     *\n     * console.log(String.extractDomain('http://www.google.com', )); // google.com\n     * @memberOf string\n     * @method extractDomain\n     * @instance\n     * @param {string} s - the URI string\n     * @param {number} level - the domain level to extract, starting from right obviously\n     * @param {boolean} excludeWww - true if you want to exclude the www. from che extraction\n     * @return {*}\n     */\n    extractDomain(s, level = 3, excludeWww = false) {\n      return String.prototype.extractDomain.call(s, level, excludeWww);\n    },\n\n    /**\n     * extracts the file extension from a filename/path string\n     * @example <caption>eg. usage</caption>\n     * console.log(String.extractFileExtension('file.jpg')); // 'jpg'\n     *\n     * console.log(String.extractFileExtension('file')); // ''\n     *\n     * console.log(String.extractFileExtension(1)); // 1\n     *\n     * console.log(('file.jpg').extractFileExtension()); // 'jpg'\n     *\n     * console.log(('file').extractFileExtension()); // ''\n     *\n     * console.log((1).extractFileExtension()); // throws error\n     * @memberOf string\n     * @method extractFileExtension\n     * @instance\n     * @param s\n     * @return {*}\n     */\n    extractFileExtension(s) {\n      if (String.isString(s)) {\n        return String.prototype.extractFileExtension.call(s);\n      }\n\n      return s;\n    },\n\n    /**\n     * extracts the query string object from an URI string\n     * @example <caption>eg. usage</caption>\n     * @example <caption>eg. usage</caption>\n     * console.log(String.extractQueryString('https://flavorjs.io/page.html?name=black mirror&email=username@example.com')); // {name: 'black mirror', email: 'username@example.com'}\n     *\n     * console.log(('https://flavorjs.io/page.html?name=black mirror&email=username@example.com').extractQueryString()); // {name: 'black mirror', email: 'username@example.com'}\n     * @memberOf string\n     * @method extractQueryString\n     * @instance\n     * @param {string} s - the URI string\n     * @return {object}\n     */\n    extractQueryString(s) {\n      return String.prototype.extractQueryString.call(s);\n    },\n\n    /**\n     * pads string on the left and right sides if it's shorter than length. Padding characters are truncated if they can't be evenly divided by length.\n     * @example <caption>eg. usage</caption>\n     * console.log(String.pad('5', 5)); // '  5  '\n     *\n     * console.log(String.pad('5', 5, '0')); // '00500'\n     *\n     * console.log(String.pad(4, 5, '01')); // '01401'\n     *\n     * console.log(String.pad(true, 5, '01')); // '1true'\n     *\n     * console.log(String.pad(4, 5, '01')); // '01401'\n     *\n     * console.log(String.pad(new Date(), 50, '--') // '-----Tue Apr 04 2017 17:54:40 GMT+0000 (CEST)-----'\n     * @memberOf string\n     * @method pad\n     * @instance\n     * @param {string} s - the string to be padded\n     * @param {number} length - the string length you need\n     * @param {string} chars - the char/chars to be used to pad the string\n     * @return {string}\n     */\n    pad(s, length, chars) {\n      return String.prototype.pad(s, length, chars);\n    },\n\n    /**\n     * pads left a string\n     * @example <caption>eg. usage</caption>\n     * console.log(String.padLeft('5', 4)); // '   5'\n     *\n     * console.log(String.padLeft('5', 4, '0')); // '0005'\n     *\n     * console.log(String.padLeft('5', 5, '01')); // '01015'\n     *\n     * console.log(String.padLeft(5, 4, '0')); // '0005'\n     *\n     * console.log(String.padLeft(true, 5, '0')); // '0true'\n     *\n     * console.log(String.padLeft(new Date(), 50, '--') // '----------Tue Apr 04 2017 17:54:40 GMT+0000 (CEST)'\n     * @memberOf string\n     * @method padLeft\n     * @instance\n     * @param {string} s - the string to be padded\n     * @param {number} length - the string length you need\n     * @param {string} chars - the char/chars to be used to pad the string\n     * @return {string}\n     */\n    padLeft(s, length, chars) {\n      return String.prototype.padLeft.call(s, length, chars);\n    },\n\n    /**\n     * pads right a string\n     * @example <caption>eg. usage</caption>\n     * console.log(String.padRight('5', 4)); // '5   '\n     *\n     * console.log(String.padRight('5', 4, '0')); // '5000'\n     *\n     * console.log(String.padRight('5', 5, '01')); // '50101'\n     *\n     * console.log(String.padRight(5, 4, '0')); // '5000'\n     *\n     * console.log(String.padRight(true, 5, '0')); // 'true0'\n     *\n     * console.log(String.padRight(new Date(), 50, '--') // 'Tue Apr 04 2017 17:54:40 GMT+0000 (CEST)----------'\n     * @memberOf string\n     * @method padRight\n     * @instance\n     * @param {string} s - the string to be padded\n     * @param {number} length - the string length you need\n     * @param {string} chars - the char/chars to be used to pad the string\n     * @return {string}\n     */\n    padRight(s, length, chars) {\n      return String.prototype.padRight.call(s, length, chars);\n    },\n\n    /**\n     * parses a percentage string to a number\n     * @example <caption>eg. usage</caption>\n     * console.log(String.parsePercentage('50,25%')); // 50.25\n     *\n     * console.log(String.parsePercentage('50,25')); // '50,25'\n     *\n     * console.log(String.parsePercentage(5)); // 5\n     * @memberOf string\n     * @method parsePercentage\n     * @instance\n     * @param {string} s - the string to be parsed\n     * @return {number}\n     */\n    parsePercentage(s) {\n      return String.prototype.parsePercentage.call(s);\n    },\n\n    /**\n     * replaces all occurrences of the needle inside the haystack with replacement\n     * @example <caption>eg. usage</caption>\n     * console.log(String.replaceAll('FlavorJS is really really tasty', 'really', '')); // 'FlavorJS is   tasty'\n     * @memberOf string\n     * @method replaceAll\n     * @instance\n     * @param {string} haystack - the haystack string\n     * @param {string} needle - the needle string\n     * @param {string} [replacement=''] - the replacement string\n     * @param {boolean} [insensitive=false] - true if you want to do an insensitive check\n     * @return {string}\n     */\n    replaceAll(haystack, needle, replacement = '', insensitive = false) {\n      return String.prototype.replaceAll.call(haystack, needle, replacement, insensitive);\n    },\n\n    /**\n     * slugifies any string\n     * @example <caption>eg. usage</caption>\n     * console.log(String.slugify('it\\'s so good to be FlavorJS')); // 'its-so-good-to-be-flavor-js'\n     *\n     * console.log(String.slugify('it\\'s so gÃ²Ã²d - to_be | FlavorJS')); // 'its-so-good-to-be-flavor-js'\n     *\n     * console.log(String.slugify('it\\'s so gÃ²Ã²d - to_be | FlavorJS', false)); // 'itssogoodtobeflavorjs'\n     *\n     * console.log('it\\'s so good to be FlavorJS'.slugify()); // 'its-so-good-to-be-flavor-js'\n     *\n     * console.log('it\\'s so gÃ²Ã²d - to_be | FlavorJS'.slugify()); // 'its-so-good-to-be-flavor-js'\n     *\n     * console.log('it\\'s so gÃ²Ã²d - to_be | FlavorJS'.slugify(false)); // 'itssogoodtobeflavorjs'\n     * @memberOf string\n     * @method slugify\n     * @instance\n     * @param {string} s - the string\n     * @param {boolean} [dashed=true] - false if you don't want dashed in the resulting string\n     * @return {string}\n     */\n    slugify(s, dashed = true) {\n      return String.prototype.slugify.call(s, dashed);\n    },\n\n    /**\n     * strips all html tags from an html code string\n     * @example <caption>eg. usage</caption>\n     * console.log(String.stripTags('<div>flavorJS</div>')); // 'flavorJS'\n     *\n     * console.log(String.stripTags('flavorJS')); // 'flavorJS'\n     * @memberOf string\n     * @method stripTags\n     * @instance\n     * @param {string} s - the string\n     * @return {string}\n     */\n    stripTags(s) {\n      return String.prototype.stripTags.call(s);\n    },\n\n    /**\n     * unescapes an HTML code string\n     * @example <caption>eg. usage</caption>\n     * console.log(String.unescapeHTML('&lt;div&gt;flavor &amp; js = tasty&lt;/div&gt;')); // '<div>flavor & js = tasty</div>'\n     *\n     * console.log(('&lt;div&gt;flavor &amp; js = tasty&lt;/div&gt;').unescapeHTML()); // '<div>flavor & js = tasty</div>'\n     * @memberOf string\n     * @method escapeHTML\n     * @instance\n     * @param {string} s - the HTML code string\n     * @return {string}\n     */\n    unescapeHTML(s) {\n      return String.prototype.unescapeHTML.call(s);\n    },\n\n    /**\n     * converts a string to a number\n     * @example <caption>eg. usage</caption>\n     * console.log(String.toInt('550')); // 550\n     * @memberOf string\n     * @method toInt\n     * @instance\n     * @param {string} s - the string\n     * @return {number}\n     */\n    toInt(s) {\n      return String.prototype.toInt.call(s);\n    },\n\n    /**\n     * transforms a string in an array of chars/words\n     * @example <caption>eg. usage</caption>\n     * console.log(String.toArray('FlavorJS')); // ['F','l','a','v','o','r','J','S']\n     *\n     * console.log(String.toArray('FlavorJS, is really, really tasty', ',')); // ['FlavorJS',' is really',' really tasty']\n     *\n     * console.log(String.toArray('FlavorJS, is really, really tasty', ',', 2)); // ['FlavorJS',' is really']\n     *\n     * console.log('FlavorJS'.toArray()); // ['F','l','a','v','o','r','J','S']\n     *\n     * console.log('FlavorJS, is really, really tasty'.toArray(',')); // ['FlavorJS',' is really',' really tasty']\n     *\n     * console.log('FlavorJS, is really, really tasty'.toArray(',', 2)); // ['FlavorJS',' is really']\n     * @memberOf string\n     * @method toArray\n     * @instance\n     * @param {string} s - the string\n     * @param {string} [separator=''] - the separator to use for the splitting\n     * @param {number} [limit=null] - the limit of items to extract starting from left\n     * @return {array}\n     */\n    toArray(s, separator = '', limit = null) {\n      return String.prototype.toArray.call(s, separator, limit || undefined);\n    },\n  },\n  prototype: {\n    isString() {\n      return _.isString(this);\n    },\n\n    isPercentage() {\n      return /^\\d+(\\.\\d+)?%$/.test(this);\n    },\n\n    isRoman() {\n      return !!Number.fromRoman(this);\n    },\n\n    isUrl() {\n      return /^(https?:\\/\\/)?((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|((\\d{1,3}\\.){3}\\d{1,3}))(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*(\\?[;&a-z\\d%_.~+=-]*)?(\\#[-a-z\\d_]*)?$/i.test(this);\n    },\n\n    contains(value, insensitive = false) {\n      return (new RegExp(_.escapeRegExp(value), 'm' + (!!insensitive ? 'i' : ''))).test(this);\n    },\n\n    startsWith(value, insensitive = false) {\n      return new RegExp('^' + _.escapeRegExp(value), 'm' + (!!insensitive ? 'i' : '')).test(this);\n    },\n\n    endsWith(value, insensitive = false) {\n      return new RegExp(_.escapeRegExp(value) + '$', 'm' + (!!insensitive ? 'i' : '')).test(this);\n    },\n\n    camelCase() {\n      return _.camelCase(this);\n    },\n\n    capitalize() {\n      return _.capitalize(this);\n    },\n\n    replaceAll(needle, replacement = '', insensitive = false) {\n      return this.replace(new RegExp(_.escapeRegExp(needle), 'mg' + (!!insensitive ? 'i' : '')), replacement);\n    },\n\n    encodeURI() {\n      return encodeURIComponent(this);\n    },\n\n    decodeURI() {\n      return decodeURIComponent(this);\n    },\n\n    escapeHTML() {\n      return _.escape(this);\n    },\n\n    /** TODO: integrate also this escapeASCII to html ascii number codes (eg. ' => &#39;)\n    //escapeASCII() {\n    //  return this.replace(/([!\"#$%&'()*+,\\-\\.\\/:;<=>?@\\[\\\\\\]^_`{|}~])/gi, (match, numStr) => {\n    //    return '&#' + String.prototype.charCodeAt.call(numStr, 0) + ';';\n    //  });\n    //},\n     */\n\n    unescapeHTML() {\n      return _.unescape(this);\n    },\n\n    /** TODO: integrate also this unescapeASCII from html ascii number codes (eg. &#39; => ')\n    //unescapeASCII() {\n    //  return this.replace(/&#([0-9]{1,3});/gi, (match, numStr) => {\n    //    const num = parseInt(numStr, 10); // read num as normal number\n    //    return String.fromCharCode(num);\n    //  });\n    //},\n    */\n\n    extractDomain(level = 3, excludeWww = false) {\n      let domain = this;\n\n      // find & remove protocol (http, ftp, etc.) and get domain\n      domain = domain.split('/')[(domain.indexOf('://') > -1 ? 2 : 0)];\n\n      // find & remove port number\n      [domain] = domain.split(':');\n\n      if (!!excludeWww) {\n        domain = domain.replaceAll('www.', '');\n      }\n\n      const domainArr = domain.split('.');\n      return domainArr.slice(domainArr.length - level).join('.');\n    },\n\n    extractQueryString() {\n      const queryStringObject = {};\n\n      if (this.contains('?')) {\n        const queryString = this.split('?').pop();\n        const queryStringParams = queryString.split('&');\n        queryStringParams.each((param) => {\n          const [key, value] = param.split('=');\n          queryStringObject[key] = value;\n        });\n      }\n\n      return queryStringObject;\n    },\n\n    slugify(dashed = true) {\n      // TODO: non lodash dependent code\n      //const slug = this.toString().toLowerCase()\n      //                         .replace(/\\s+/g, dashed ? '-' : '') // Replace spaces with -\n      //                         .replace(/[^\\w\\-]+/g, '') // Remove all non-word chars\n      //                         .replace(/\\-\\-+/g, dashed ? '-' : '') // Replace multiple - with single -\n      //                         .replace(/^-+/, '') // Trim - from start of text\n      //                         .replace(/-+$/, ''); // Trim - from end of text\n      //\n      //return dashed ? slug : slug.replaceAll('-', '');\n\n      const slug = _.kebabCase(this);\n      return !!dashed ? slug : slug.replaceAll('-', '');\n    },\n\n    extractFileExtension() {\n      return this.substring(this.lastIndexOf('.') + 1).toLowerCase();\n    },\n\n    stripTags() {\n      const div = document.createElement('div');\n      div.innerHTML = this;\n      return div.textContent;\n    },\n\n    /** TODO: integrate faker.js library to lorem strings\n    // lorem(count, units) {\n    //   return holderIpsum[units](count);\n    // },\n    */\n\n    pad(length, chars) {\n      return _.pad(this, length, chars);\n    },\n\n    padLeft(length, chars) {\n      return _.padStart(this, length, chars);\n    },\n\n    padRight(length, chars) {\n      return _.padEnd(this, length, chars);\n    },\n\n    parsePercentage() {\n      if (this.isPercentage()) {\n        return parseFloat(this) / 100.00;\n      }\n\n      return this;\n    },\n\n    toInt() {\n      return Number.parse(this);\n    },\n\n    toArray(separator = '', limit = null) {\n      return _.split(this, separator, limit || undefined);\n    },\n  },\n};\n","import _ from 'lodash';\n\nimport CoreExt from './extensions/core';\nimport LodashExt from './extensions/lodash';\nimport ObjectExt from './extensions/object';\nimport FunctionExt from './extensions/function';\nimport BooleanExt from './extensions/boolean';\nimport NumberExt from './extensions/number';\nimport DateExt from './extensions/date';\nimport StringExt from './extensions/string';\nimport ArrayExt from './extensions/array';\n\nimport release from './release.json';\n\n/**\n * constructs FlavorJS class & extends the js natives\n * @class FlavorJS\n * @classdesc FlavorJS the definitive JS natives chainable extensions methods\n * @public\n */\nexport default class FlavorJS {\n  constructor() {\n    this.init();\n  }\n\n  /**\n   * safe js native prototype extension using Object.defineProperty\n   * @memberOf FlavorJS\n   * @method extendPrototypeProperty\n   * @instance\n   * @param {prototype|object} proto - the prototype/object to extend\n   * @param {string} prop - the name of the property to be defined or modified\n   * @param {*} val - val to be used as value in the descriptor for the property, can be any kind of native (number, function, etc...) or what you want\n   * @param {object} [options={}] - options to be used as parameters in the descriptor for the property<br>\n   * possible options are (source documentation from <a href=\"https://developer.mozilla.org/it/docs/Web/JavaScript/Reference/Global_Objects/object/defineProperty\" target=\"_blank\">Javascript|MDN docs</a>)<br>\n   * @param {boolean} [options.configurable=true] configurable - true if and only if the type of this property descriptor may be changed and if the property may be deleted from the corresponding Object.\n   * @param {boolean} [options.enumerable=false] enumerable - true if and only if this property shows up during enumeration of the properties on the corresponding Object.\n   * @param {boolean} [options.writable=true] writable - true if and only if the value associated with the property may be changed with an assignment operator.\n   * @param {function} [options.get=undefined] get - A function which serves as a getter for the property, or undefined if there is no getter. The function return will be used as the value of property.<br>\n   * for example...<br>\n   * <pre>\n   * function ClassName() {\n   *   var privateProp = null;\n   *\n   *   Object.defineProperty(this, 'publicProp', {\n   *     get: function() {\n   *       return privateProp;\n   *     }\n   *   });\n   * }\n   * </pre>\n   * @param {function} [options.set=undefined] set - A function which serves as a setter for the property, or undefined if there is no setter. The function will receive as only argument the new value being assigned to the property.<br>\n   * for example...<br>\n   * <pre>\n   * function ClassName() {\n   *   var privateProp = null;\n   *\n   *   Object.defineProperty(this, 'publicProp', {\n   *     set: function(value) {\n   *       privateProp = value;\n   *     }\n   *   });\n   * }\n   * </pre>\n   */\n  extendPrototypeProperty(proto, prop, val, options = {}) {\n    Object.defineProperty(proto, prop, {\n      value: val,\n      writable: true,\n      configurable: true,\n      enumerable: false,\n    });\n  }\n\n  /**\n   * merges all keys in extend plain object to the prototype (\n   * @memberOf FlavorJS\n   * @method extendPrototype\n   * @instance\n   * @param {prototype|object} proto - the prototype/object to extend\n   * @param {object} extend - the extend object to be merged in prototype\n   */\n  extendPrototype(proto, extend) {\n    _.forOwn(extend, (value, key) => {\n      this.extendPrototypeProperty(proto, key, value);\n    });\n  }\n\n  /**\n   * extendLodash\n   * @memberOf FlavorJS\n   * @method extendLodash\n   * @instance\n   */\n  extendLodash() {\n    _.mixin(LodashExt);\n  }\n\n  /**\n   * extendObject\n   * @memberOf FlavorJS\n   * @method extendObject\n   * @instance\n   */\n  extendObject() {\n    this.extendPrototype(Object.prototype, ObjectExt.prototype);\n    this.extendPrototype(Object, ObjectExt.native);\n  }\n\n  /**\n   * extendFunction\n   * @memberOf FlavorJS\n   * @method extendFunction\n   * @instance\n   */\n  extendFunction() {\n    this.extendPrototype(Function.prototype, FunctionExt.prototype);\n    this.extendPrototype(Function, FunctionExt.native);\n  }\n\n  /**\n   * extendBoolean\n   * @memberOf FlavorJS\n   * @method extendBoolean\n   * @instance\n   */\n  extendBoolean() {\n    this.extendPrototype(Boolean.prototype, BooleanExt.prototype);\n    this.extendPrototype(Boolean, BooleanExt.native);\n  }\n\n  /**\n   * extendNumber\n   * @memberOf FlavorJS\n   * @method extendNumber\n   * @instance\n   */\n  extendNumber() {\n    this.extendPrototype(Number.prototype, NumberExt.prototype);\n    this.extendPrototype(Number, NumberExt.native);\n  }\n  /**\n   * extendDate\n   * @memberOf FlavorJS\n   * @method extendDate\n   * @instance\n   */\n  extendDate() {\n    this.extendPrototype(Date.prototype, DateExt.prototype);\n    this.extendPrototype(Date, DateExt.native);\n  }\n\n  /**\n   * extendString\n   * @memberOf FlavorJS\n   * @method extendString\n   * @instance\n   */\n  extendString() {\n    this.extendPrototype(String.prototype, StringExt.prototype);\n    this.extendPrototype(String, StringExt.native);\n  }\n\n  /**\n   * extendArray\n   * @memberOf FlavorJS\n   * @method extendArray\n   * @instance\n   */\n  extendArray() {\n    this.extendPrototype(Array.prototype, ArrayExt.prototype);\n    this.extendPrototype(Array, ArrayExt.native);\n  }\n\n  /**\n   * initialize all\n   * @memberOf FlavorJS\n   * @method init\n   * @instance\n   */\n  init() {\n    this.extendLodash();\n    this.extendObject();\n    this.extendFunction();\n    this.extendBoolean();\n    this.extendNumber();\n    this.extendDate();\n    this.extendString();\n    this.extendArray();\n\n    const flavorJSStatus = release.version.inherit({\n      initialized: true,\n    });\n\n    Object.inherit(this, CoreExt, flavorJSStatus);\n\n    console.log('FlavorJS initialized', flavorJSStatus);\n  }\n}\n","/*global Window*/\n\nimport FlavorJS from './flavor';\n\nconst flavorJSInitialized = (!!window && window instanceof Window && !!window.FlavorJS && !!window.Æ’);\n\nconst flavorJS = flavorJSInitialized ? window.FlavorJS : new FlavorJS();\n\nwindow.FlavorJS = flavorJS;\nwindow.Æ’ = flavorJS;\n\nexport default flavorJS;\n","module.exports = __WEBPACK_EXTERNAL_MODULE_lodash__;"],"sourceRoot":""}